<?xml version="1.0"?>

<doc>
	<assembly>
		<name>Artemis.Extensions.ServiceConnect</name>
	</assembly>
	<members>
		<member name="T:Artemis.Extensions.ServiceConnect.AspireExtensions">
			<summary>
				Aspire扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.AddServiceDefaults(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
			<summary>
				添加默认服务配置
			</summary>
			<param name="builder"></param>
			<returns></returns>
			<remarks>OpenTelemetry, 默认健康检查，服务发现，云原生Http客户端信道</remarks>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.AddAspireConfiguration(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				添加Aspire配置
			</summary>
			<param name="builder"></param>
			<param name="path"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.ConfigureOpenTelemetry(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
			<summary>
				配置OpenTelemetry
			</summary>
			<param name="builder"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.AddOpenTelemetryExporters(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
			<summary>
				添加OpenTelemetry导出器
			</summary>
			<param name="builder"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.AddDefaultHealthChecks(Microsoft.Extensions.Hosting.IHostApplicationBuilder)">
			<summary>
				添加默认健康检查
			</summary>
			<param name="builder"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.AspireExtensions.MapDefaultEndpoints(Microsoft.AspNetCore.Builder.WebApplication)">
			<summary>
				映射默认端点
			</summary>
			<param name="app"></param>
			<returns></returns>
			<remarks>dev:/health 健康检查, dev:/alive 存活检查, prod:/health-detail 详细健康检查</remarks>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy">
			<summary>
				ConnectionMultiplexer缓存代理
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.#ctor(StackExchange.Redis.IConnectionMultiplexer)">
			<summary>
				抽象缓存代理实现
			</summary>
			<param name="cache"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.Set``1(System.String,``0,System.Int32)">
			<summary>
				设置缓存
			</summary>
			<typeparam name="TEntity">缓存实体</typeparam>
			<param name="key">键</param>
			<param name="value">值</param>
			<param name="expire">过期时间</param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.SetAsync``1(System.String,``0,System.Int32,System.Threading.CancellationToken)">
			<summary>
				异步设置缓存
			</summary>
			<typeparam name="TEntity">缓存实体类型</typeparam>
			<param name="key">键</param>
			<param name="value">值</param>
			<param name="expire">过期时间</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.Get``1(System.String)">
			<summary>
				获取缓存
			</summary>
			<typeparam name="TEntity">缓存实体类型</typeparam>
			<param name="key">键</param>
			<returns>值</returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.GetAsync``1(System.String,System.Threading.CancellationToken)">
			<summary>
				异步获取缓存
			</summary>
			<typeparam name="TEntity">缓存实体</typeparam>
			<param name="key">键</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.Remove(System.String)">
			<summary>
				移除缓存
			</summary>
			<param name="key">键</param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.ConnectionMultiplexerCacheProxy.RemoveAsync(System.String,System.Threading.CancellationToken)">
			<summary>
				异步移除缓存
			</summary>
			<param name="key"></param>
			<param name="cancellationToken"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy">
			<summary>
				分布式缓存代理
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
			<summary>
				分布式缓存代理
			</summary>
			<param name="cache">缓存依赖</param>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.Set``1(System.String,``0,System.Int32)">
			<summary>
				设置缓存
			</summary>
			<typeparam name="TEntity">缓存实体</typeparam>
			<param name="key">键</param>
			<param name="value">值</param>
			<param name="expire">过期时间</param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.SetAsync``1(System.String,``0,System.Int32,System.Threading.CancellationToken)">
			<summary>
				异步设置缓存
			</summary>
			<typeparam name="TEntity">缓存实体类型</typeparam>
			<param name="key">键</param>
			<param name="value">值</param>
			<param name="expire">过期时间</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.Get``1(System.String)">
			<summary>
				获取缓存
			</summary>
			<typeparam name="TEntity">缓存实体类型</typeparam>
			<param name="key">键</param>
			<returns>值</returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.GetAsync``1(System.String,System.Threading.CancellationToken)">
			<summary>
				异步获取缓存
			</summary>
			<typeparam name="TEntity">缓存实体</typeparam>
			<param name="key">键</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.Remove(System.String)">
			<summary>
				移除缓存
			</summary>
			<param name="key">键</param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Cache.DistributedCacheProxy.RemoveAsync(System.String,System.Threading.CancellationToken)">
			<summary>
				异步移除缓存
			</summary>
			<param name="key"></param>
			<param name="cancellationToken"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.CommonExtensions">
			<summary>
				常用配置扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.CommonExtensions.AddServiceCommons(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Boolean)">
			<summary>
				添加常用服务配置
			</summary>
			<param name="builder"></param>
			<param name="includeDefaultService"></param>
			<returns></returns>
			<remarks>默认：OpenTelemetry, 默认健康检查，服务发现，云原生Http客户端信道，常规：httpAccessor，压缩(生产环境)，认证，授权，http日志</remarks>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.CommonExtensions.ConfigureAppCommons(Microsoft.AspNetCore.Builder.WebApplication)">
			<summary>
				配置默认程序
			</summary>
			<param name="app"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.CommonExtensions.MapCommonEndpoints(Microsoft.AspNetCore.Builder.WebApplication,System.Boolean,System.Boolean)">
			<summary>
				映射常用端点
			</summary>
			<param name="app"></param>
			<param name="includeDefaultEndpoints">是否包含默认端点</param>
			<param name="useApiController"></param>
			<returns></returns>
			<remarks>默认:dev:/health 健康检查, dev:/alive 存活检查, prod:/health-detail 详细健康检查|常用：apicontroller, /route-table</remarks>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.CommonExtensions.MapCommonEndpoints``1(Microsoft.AspNetCore.Builder.WebApplication,System.Boolean,System.Boolean)">
			<summary>
				映射常用端点
			</summary>
			<param name="app"></param>
			<param name="includeDefaultEndpoints">是否包含默认端点</param>
			<param name="useApiController">是否包含Api控制器</param>
			<returns></returns>
			<remarks>默认:dev:/health 健康检查, dev:/alive 存活检查, prod:/health-detail 详细健康检查|常用：apicontroller, /route-table，dev: /migrate</remarks>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.ComponentExtensions">
			<summary>
				Aspire组件扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.ComponentExtensions.AddRedisComponent(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				添加Redis组件
			</summary>
			<param name="builder">appBuilder</param>
			<param name="connectionName">连接名</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.ComponentExtensions.AddMongoDbComponent(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				添加MongoDB组件
			</summary>
			<param name="builder"></param>
			<param name="connectionName"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.ComponentExtensions.AddRabbitMqComponent(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				添加RabbitMQ组件
			</summary>
			<param name="builder"></param>
			<param name="connectionName"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.ComponentExtensions.AddPostgreSqlComponent``1(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String,System.Action{Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.NpgsqlDbContextOptionsBuilder},System.Action{System.String},Microsoft.Extensions.Logging.LogLevel)">
			<summary>
				添加Postgresql组件
			</summary>
			<typeparam name="TDbContext"></typeparam>
			<param name="builder"></param>
			<param name="connectionName"></param>
			<param name="migrateAction"></param>
			<param name="logger"></param>
			<param name="logLevel"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.GrpcExtensions">
			<summary>
				Grpc扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.GrpcExtensions.ConfigureGrpc(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.Boolean)">
			<summary>
				配置Grpc
			</summary>
			<param name="builder"></param>
			<param name="enableValidator"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.GrpcExtensions.UseGrpcSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
			<summary>
				使用Grpc修饰
			</summary>
			<param name="app"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.HttpLogging.ArtemisHttpLoggingInterceptor">
			<summary>
				Http日志拦截器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.HttpLogging.ArtemisHttpLoggingInterceptor.OnRequestAsync(Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext)">
			<summary>
				A callback to customize the logging of the request and response.
			</summary>
			<remarks>
				This is called when the request is first received and can be used to configure both request and response options.
				All settings will carry over to
				<see
					cref="M:Microsoft.AspNetCore.HttpLogging.IHttpLoggingInterceptor.OnResponseAsync(Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext)" />
				except the <see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" />
				will be cleared after logging the request.
				<see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.LoggingFields" /> may be changed per
				request to control the logging behavior.
				If no request fields are enabled, and the
				<see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" /> collection is empty, no
				request logging will occur.
				If <see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingOptions.CombineLogs" /> is enabled then
				<see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" /> will carry over from the
				request to response
				and be logged together.
			</remarks>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.HttpLogging.ArtemisHttpLoggingInterceptor.OnResponseAsync(Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext)">
			<summary>A callback to customize the logging of the response.</summary>
			<remarks>
				This is called when the first write to the response happens, or the response ends without a write, just before
				anything is sent to the client. Settings are carried
				over from
				<see
					cref="M:Microsoft.AspNetCore.HttpLogging.IHttpLoggingInterceptor.OnRequestAsync(Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext)" />
				(except the <see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" />) and
				response settings may
				still be modified. Changes to request settings will have no effect. If no response fields are enabled, and the
				<see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" />
				collection is empty, no response logging will occur.
				If <see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingOptions.CombineLogs" /> is enabled then
				<see cref="P:Microsoft.AspNetCore.HttpLogging.HttpLoggingInterceptorContext.Parameters" /> will carry over from the
				request to response
				and be logged together. <see cref="F:Microsoft.AspNetCore.HttpLogging.HttpLoggingFields.RequestBody" /> and
				<see cref="F:Microsoft.AspNetCore.HttpLogging.HttpLoggingFields.ResponseBody" />  can also be disabled in
				OnResponseAsync to prevent
				logging any buffered body data.
			</remarks>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog">
			<summary>
				日志加载项
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog.#ctor(Microsoft.Extensions.Logging.ILogger{Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog},Microsoft.Extensions.Options.IOptions{Artemis.Extensions.Identity.ArtemisIdentityOptions})">
			<summary>
				侦听器构造
			</summary>
			<param name="logger"></param>
			<param name="options"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog.ResolveTokenDocument(Artemis.Extensions.Identity.TokenRecord)">
			<summary>
				解析Token文档到字符串
			</summary>
			<param name="tokenDocument"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog`1">
			<summary>
				日志加载项
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog`1.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Options.IOptions{Artemis.Extensions.Identity.ArtemisIdentityOptions})">
			<summary>
				侦听器构造
			</summary>
			<param name="logger"></param>
			<param name="options"></param>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog`1.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog`1.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
			<summary>
				Server-side handler for intercepting and incoming unary call.
			</summary>
			<typeparam name="TRequest">Request message type for this method.</typeparam>
			<typeparam name="TResponse">Response message type for this method.</typeparam>
			<param name="request">The request value of the incoming invocation.</param>
			<param name="context">
				An instance of <see cref="T:Grpc.Core.ServerCallContext" /> representing
				the context of the invocation.
			</param>
			<param name="continuation">
				A delegate that asynchronously proceeds with the invocation, calling
				the next interceptor in the chain, or the service request handler,
				in case of the last interceptor and return the response value of
				the RPC. The interceptor can choose to call it zero or more times
				at its discretion.
			</param>
			<returns>
				A future representing the response value of the RPC. The interceptor
				can simply return the return value from the continuation intact,
				or an arbitrary response value as it sees fit.
			</returns>
		</member>
		<member name="M:Artemis.Extensions.ServiceConnect.Interceptors.AddInsLog`1.ResolveTokenDocument(`0)">
			<summary>
				解析Token文档到字符串
			</summary>
			<param name="tokenDocument"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Interceptors.FriendlyException">
			<summary>
				友好异常侦听器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.FriendlyException.#ctor(Microsoft.Extensions.Logging.ILogger{Artemis.Extensions.ServiceConnect.Interceptors.FriendlyException})">
			<summary>
				侦听器构造
			</summary>
			<param name="logger"></param>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.Interceptors.FriendlyException.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.FriendlyException.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
			<summary>
				侦听一元调用异常
			</summary>
			<typeparam name="TRequest"></typeparam>
			<typeparam name="TResponse"></typeparam>
			<param name="request"></param>
			<param name="context"></param>
			<param name="continuation"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator">
			<summary>
				消息校验侦听器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator})">
			<summary>
				侦听器构造
			</summary>
			<param name="provider"></param>
			<param name="logger"></param>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator.Provider">
			<summary>
				服务提供程序
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
			<summary>
				侦听一元调用
			</summary>
			<typeparam name="TRequest"></typeparam>
			<typeparam name="TResponse"></typeparam>
			<param name="request"></param>
			<param name="context"></param>
			<param name="continuation"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Interceptors.MessageValidator.TryGetValidator``1(FluentValidation.IValidator{``0}@)">
			<summary>
				获取验证器
			</summary>
			<typeparam name="TRequest"></typeparam>
			<param name="validator"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.MapEndPoints.MapEndPointsExtensions">
			<summary>
				端映射扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.MapEndPoints.MapEndPointsExtensions.MapMigrationEndpoint``1(Microsoft.AspNetCore.Builder.WebApplication,System.String)">
			<summary>
				映射迁移端点
			</summary>
			<typeparam name="TDbContext"></typeparam>
			<param name="app"></param>
			<param name="pattern"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.MapEndPoints.MapEndPointsExtensions.MapRouteTable(Microsoft.AspNetCore.Builder.WebApplication,System.String)">
			<summary>
				映射路由表
			</summary>
			<param name="app"></param>
			<param name="pattern"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.MapEndPoints.MapEndPointsExtensions.MapDetailHealthChecks(Microsoft.AspNetCore.Builder.WebApplication,System.String)">
			<summary>
				映射健康检查详细信息
			</summary>
			<param name="app"></param>
			<param name="pattern"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.MapEndPoints.MapEndPointsExtensions.WriteResponse(Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Diagnostics.HealthChecks.HealthReport)">
			<summary>
				写入响应
			</summary>
			<param name="context"></param>
			<param name="healthReport"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.MapEndPoints.RouteInfo">
			<summary>
				路由信息
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.MapEndPoints.RouteInfo.RouteType">
			<summary>
				路由类型
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.MapEndPoints.RouteInfo.Path">
			<summary>
				路由路径
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.MapEndPoints.RouteInfo.Description">
			<summary>
				路由描述
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SerilogExtensions">
			<summary>
				配置扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SerilogExtensions.ConfigureSerilog(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				添加Serilog配置
			</summary>
			<param name="builder"></param>
			<param name="path"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.AddAuthorizationToken">
			<summary>
				添加认证令牌操作过滤器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.AddAuthorizationToken.#ctor(Microsoft.Extensions.Options.IOptions{Artemis.Extensions.Identity.ArtemisIdentityOptions})">
			<summary>
				构造
			</summary>
			<param name="options"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.AddAuthorizationToken.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
			<summary>
				实现
			</summary>
			<param name="operation"></param>
			<param name="context"></param>
			<exception cref="T:System.NotImplementedException"></exception>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.AddAuthorizationToken.Options">
			<summary>
				认证配置依赖
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor">
			<summary>
				注释描述器
			</summary>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._expressionPicker">
			<summary>
				表达式提取器缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.ExpressionPicker">
			<summary>
				表达式提取器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.Describe(System.String[],System.Reflection.MemberInfo)">
			<summary>
				描述
			</summary>
			<param name="comments"></param>
			<param name="memberInfo"></param>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._requiredResolve">
			<summary>
				必要性标识解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.RequiredResolve">
			<summary>
				必要性标识解析
			</summary>
			<example>@required</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._minResolve">
			<summary>
				最小值解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.MinResolve">
			<summary>
				最小值解析
			</summary>
			<example>@min(0)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._maxResolve">
			<summary>
				最大值解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.MaxResolve">
			<summary>
				最大值解析
			</summary>
			<example>@max(100)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._rangeResolve">
			<summary>
				值范围解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.RangeResolve">
			<summary>
				值范围解析
			</summary>
			<example>@range(0,100)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._minLengthResolve">
			<summary>
				最短长度缓存标识解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.MinLengthResolve">
			<summary>
				最短长度缓存标识解析
			</summary>
			<example>@minLength(12)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._maxLengthResolve">
			<summary>
				长度缓存标识解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.MaxLengthResolve">
			<summary>
				长度缓存标识解析
			</summary>
			<example>@maxLength(12)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._lengthResolve">
			<summary>
				长度缓存标识解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.LengthResolve">
			<summary>
				长度缓存标识解析
			</summary>
			<example>@length(12)</example>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor._exampleResolve">
			<summary>
				示例解析缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.CommentDescriptor.ExampleResolve">
			<summary>
				示例解析
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache">
			<summary>
				描述器缓存
			</summary>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache._requiredFieldsMap">
			<summary>
				必要属性映射缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.RequiredFieldsMap">
			<summary>
				必要属性映射访问器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatDateTime(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化日期时间
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatDate(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化日期
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatTime(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化时间
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatTimestamp(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化时间戳
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatEmail(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化邮箱
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatPhone(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化手机号码
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatHostName(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化主机
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatIpv4(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化ipv4
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatIpv6(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化ipv6
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatUri(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化uri
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatMd5(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化md5
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatGuid(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化guid
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatCar(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化车牌号
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatPassword(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化密码
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatIdCard(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化身份证号码
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatTelephone(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化电话号码
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatVideoUrl(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化视频链接
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatImageUrl(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化图片链接
			</summary>
			<param name="schema"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatException(Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo)">
			<summary>
				格式化异常
			</summary>
			<param name="schema"></param>
		</member>
		<member name="F:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache._formatMap">
			<summary>
				格式化映射缓存
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.DescriptorCache.FormatMap">
			<summary>
				格式化映射访问器
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo">
			<summary>
				架构信息接口
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Minimum">
			<summary>
				最小值
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Maximum">
			<summary>
				最大值
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.MinLength">
			<summary>
				最短长度
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.MaxLength">
			<summary>
				最长长度
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Format">
			<summary>
				格式
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Example">
			<summary>
				例子
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Pattern">
			<summary>
				匹配模式
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.Description">
			<summary>
				描述
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.ISchemaInfo.IsPassword">
			<summary>
				是否是密码
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo">
			<summary>
				架构信息
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Minimum">
			<summary>
				最小值
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Maximum">
			<summary>
				最大值
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.MinLength">
			<summary>
				最短长度
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.MaxLength">
			<summary>
				最长长度
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Format">
			<summary>
				格式
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Example">
			<summary>
				例子
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Pattern">
			<summary>
				匹配模式
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.Description">
			<summary>
				描述
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.Descriptor.SchemaInfo.IsPassword">
			<summary>
				是否是密码
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.GrpcCommentDescriptor">
			<summary>
				Grpc注释描述器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.GrpcCommentDescriptor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				描述器构造
			</summary>
			<param name="options"></param>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.GrpcCommentDescriptor.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
			<summary>
				实现
			</summary>
			<param name="schema"></param>
			<param name="context"></param>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.GrpcCommentDescriptor.Options">
			<summary>
				认证配置依赖
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.ParameterDescriptionModify">
			<summary>
				参数描述修饰
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.ParameterDescriptionModify.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
			<summary>
				应用
			</summary>
			<param name="operation"></param>
			<param name="context"></param>
			<exception cref="T:System.NotImplementedException"></exception>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.RemoveDefaultRpcResponse">
			<summary>
				移除默认响应
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.RemoveDefaultRpcResponse.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
			<summary>
				实现
			</summary>
			<param name="operation"></param>
			<param name="context"></param>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.RemoveDefaultRpcSchemas">
			<summary>
				移除默认生成的模式
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.RemoveDefaultRpcSchemas.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
			<summary>
				执行
			</summary>
			<param name="swaggerDoc"></param>
			<param name="context"></param>
			<exception cref="T:System.NotImplementedException"></exception>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerExtensions">
			<summary>
				Swagger扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerExtensions.ConfigureSwagger(Microsoft.Extensions.Hosting.IHostApplicationBuilder,System.String)">
			<summary>
				配置Grpc
			</summary>
			<param name="builder"></param>
			<param name="path"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerExtensions.MapSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
			<summary>
				映射Swagger端
			</summary>
			<param name="app"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerConfig">
			<summary>
				Swagger配置
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerConfig.UserGrpc">
			<summary>
				是否是GrpcSwagger
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerConfig.EnableInProduction">
			<summary>
				是否允许在生产环境中使用
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerConfig.Application">
			<summary>
				应用名
			</summary>
		</member>
		<member name="P:Artemis.Extensions.ServiceConnect.SwaggerFilters.SwaggerConfig.XmlDocs">
			<summary>
				xml文档
			</summary>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Validators.StringValidator">
			<summary>
				字符串验证器
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.ShouldNotBeEmptyOrWhiteSpace``1(FluentValidation.IRuleBuilder{``0,System.String})">
			<summary>
				不能为空,空字符串或纯空格字符
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequireLength``1(FluentValidation.IRuleBuilder{``0,System.String},System.Int32)">
			<summary>
				必须大于或等于指定长度
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="length"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequireDigit``1(FluentValidation.IRuleBuilder{``0,System.String},System.Boolean)">
			<summary>
				必须包含数字字符
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="required"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequireUpperCase``1(FluentValidation.IRuleBuilder{``0,System.String},System.Boolean)">
			<summary>
				必须包含大写字母
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="required"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequireLowerCase``1(FluentValidation.IRuleBuilder{``0,System.String},System.Boolean)">
			<summary>
				必须包含小写字母
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="required"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequireNonAlphanumeric``1(FluentValidation.IRuleBuilder{``0,System.String},System.Boolean)">
			<summary>
				必须包含特殊字符
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="required"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.RequiredUniqueChars``1(FluentValidation.IRuleBuilder{``0,System.String},System.Int32)">
			<summary>
				需要的字符种类(唯一字符数)
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="count"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.ShouldBePassword``1(FluentValidation.IRuleBuilder{``0,System.String},System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
			<summary>
				应当是有效的密码
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="requireLength"></param>
			<param name="requireDigit"></param>
			<param name="requireUppercase"></param>
			<param name="requireLowercase"></param>
			<param name="requireNonAlphanumeric"></param>
			<param name="requiredUniqueChars"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.ShouldBeEmail``1(FluentValidation.IRuleBuilder{``0,System.String})">
			<summary>
				应当是有效的电子邮件地址
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.ShouldBePhone``1(FluentValidation.IRuleBuilder{``0,System.String},Artemis.Data.Core.Fundamental.PhonePatternMode)">
			<summary>
				应当是有效的手机号码
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="mode"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.StringValidator.ShouldBeGuid``1(FluentValidation.IRuleBuilder{``0,System.String},Artemis.Data.Core.Fundamental.GuidFormat,Artemis.Data.Core.Fundamental.CharacterCaseMode)">
			<summary>
				应当是有效的GUID
			</summary>
			<typeparam name="T"></typeparam>
			<param name="ruleBuilder"></param>
			<param name="format"></param>
			<param name="caseMode"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Extensions.ServiceConnect.Validators.ValidatorExtensions">
			<summary>
				Web扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.ValidatorExtensions.AddValidator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
			<summary>
				添加验证器
			</summary>
			<param name="services"></param>
			<param name="implementationType"></param>
			<param name="lifetime"></param>
			<exception cref="T:System.AggregateException"></exception>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.ValidatorExtensions.AddValidator``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
			<summary>
				添加验证器
			</summary>
			<typeparam name="TValidator"></typeparam>
			<param name="services"></param>
			<param name="lifetime"></param>
			<returns></returns>
			<exception cref="T:System.AggregateException"></exception>
		</member>
		<member
			name="M:Artemis.Extensions.ServiceConnect.Validators.ValidatorExtensions.AddValidators(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
			<summary>
				添加当前域下所有验证器
			</summary>
			<param name="services"></param>
			<param name="lifetime"></param>
			<returns></returns>
			<exception cref="T:System.AggregateException"></exception>
		</member>
	</members>
</doc>