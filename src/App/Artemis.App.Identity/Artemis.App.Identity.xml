<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Artemis.App.Identity</name>
    </assembly>
    <members>
        <member name="T:Artemis.App.Identity.Interceptors.TokenInterceptor">
            <summary>
                Token侦听器
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Interceptors.TokenInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
            <summary>
                Server-side handler for intercepting and incoming unary call.
            </summary>
            <typeparam name="TRequest">Request message type for this method.</typeparam>
            <typeparam name="TResponse">Response message type for this method.</typeparam>
            <param name="request">The request value of the incoming invocation.</param>
            <param name="context">
                An instance of <see cref="T:Grpc.Core.ServerCallContext" /> representing
                the context of the invocation.
            </param>
            <param name="continuation">
                A delegate that asynchronously proceeds with the invocation, calling
                the next interceptor in the chain, or the service request handler,
                in case of the last interceptor and return the response value of
                the RPC. The interceptor can choose to call it zero or more times
                at its discretion.
            </param>
            <returns>
                A future representing the response value of the RPC. The interceptor
                can simply return the return value from the continuation intact,
                or an arbitrary response value as it sees fit.
            </returns>
        </member>
        <member name="T:Artemis.App.Identity.Migrations.InitialIdentity">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.App.Identity.Program">
            <summary>
                Program
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Program.Main(System.String[])">
            <summary>
                Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Artemis.App.Identity.Services.AccountService">
            <summary>
                账户服务
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.#ctor(Artemis.Services.Identity.Managers.IAccountManager)">
            <summary>
                账户服务
            </summary>
            <param name="accountManager">账户管理器依赖</param>
        </member>
        <member name="P:Artemis.App.Identity.Services.AccountService.AccountManager">
            <summary>
                角色管理器
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.SignInAsync(Artemis.Shared.Identity.Services.SignInRequest,Grpc.Core.ServerCallContext)">
            <summary>
                登录
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.SignUpAsync(Artemis.Shared.Identity.Services.SignUpRequest,Grpc.Core.ServerCallContext)">
            <summary>
                注册
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.ChangePasswordAsync(Artemis.Shared.Identity.Services.ChangePasswordRequest,Grpc.Core.ServerCallContext)">
            <summary>
                修改密码
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.ResetPasswordAsync(Artemis.Shared.Identity.Services.ResetPasswordRequest,Grpc.Core.ServerCallContext)">
            <summary>
                重置密码
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.AccountService.ResetPasswordsAsync(Artemis.Shared.Identity.Services.ResetPasswordsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                重置密码
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="T:Artemis.App.Identity.Services.RoleService">
            <summary>
                角色服务
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.#ctor(Artemis.Services.Identity.Managers.IRoleManager)">
            <summary>
                角色服务
            </summary>
            <param name="roleManager">角色管理器依赖</param>
        </member>
        <member name="P:Artemis.App.Identity.Services.RoleService.RoleManager">
            <summary>
                角色管理器
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.FetchRolesAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchRolesFilter},Grpc.Core.ServerCallContext)">
            <summary>
                搜索角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.GetRoleAsync(Artemis.Shared.Identity.Services.GetRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns>角色信息<see cref="T:Artemis.Shared.Identity.Transfer.RoleInfo" /></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.CreateRoleAsync(Artemis.Shared.Identity.Services.CreateRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                创建角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.CreateRolesAsync(Artemis.Shared.Identity.Services.CreateRolesRequest,Grpc.Core.ServerCallContext)">
            <summary>
                创建角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.UpdateRoleAsync(Artemis.Shared.Identity.Services.UpdateRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                更新角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.UpdateRolesAsync(Artemis.Shared.Identity.Services.UpdateRolesRequest,Grpc.Core.ServerCallContext)">
            <summary>
                更新角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.UpdateOrCreateRoleAsync(Artemis.Shared.Identity.Services.UpdateRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                更新或创建角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.DeleteRoleAsync(Artemis.Shared.Identity.Services.DeleteRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.DeleteRolesAsync(Artemis.Shared.Identity.Services.DeleteRolesRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.FetchRoleUsersAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchRoleUsersFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.GetRoleUserAsync(Artemis.Shared.Identity.Services.GetRoleUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.AddRoleUserAsync(Artemis.Shared.Identity.Services.AddRoleUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.AddRoleUsersAsync(Artemis.Shared.Identity.Services.AddRoleUsersRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.RemoveRoleUserAsync(Artemis.Shared.Identity.Services.RemoveRoleUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.RemoveRoleUsersAsync(Artemis.Shared.Identity.Services.RemoveRoleUsersRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.FetchRoleClaimsAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchRoleClaimsFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.GetRoleClaimAsync(Artemis.Shared.Identity.Services.GetRoleClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.AddRoleClaimAsync(Artemis.Shared.Identity.Services.AddRoleClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.AddRoleClaimsAsync(Artemis.Shared.Identity.Services.AddRoleClaimsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.RemoveRoleClaimAsync(Artemis.Shared.Identity.Services.RemoveRoleClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.RoleService.RemoveRoleClaimsAsync(Artemis.Shared.Identity.Services.RemoveRoleClaimsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除角色凭据
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="T:Artemis.App.Identity.Services.UserService">
            <summary>
                用户服务
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.#ctor(Artemis.Services.Identity.Managers.IUserManager)">
            <summary>
                泛型API控制器
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:Artemis.App.Identity.Services.UserService.UserManager">
            <summary>
                用户管理器
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.FetchUsersAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchUsersFilter},Grpc.Core.ServerCallContext)">
            <summary>
                搜索用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.GetUserAsync(Artemis.Shared.Identity.Services.GetUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns>角色信息<see cref="T:Artemis.Shared.Identity.Transfer.UserInfo" /></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.CreateUserAsync(Artemis.Shared.Identity.Services.CreateUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                创建用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.CreateUsersAsync(Artemis.Shared.Identity.Services.CreateUsersRequest,Grpc.Core.ServerCallContext)">
            <summary>
                创建用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.UpdateUserAsync(Artemis.Shared.Identity.Services.UpdateUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                更新用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.UpdateUsersAsync(Artemis.Shared.Identity.Services.UpdateUsersRequest,Grpc.Core.ServerCallContext)">
            <summary>
                更新用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.DeleteUserAsync(Artemis.Shared.Identity.Services.DeleteUserRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户
            </summary>
            <param name="request">删除用户请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.DeleteUsersAsync(Artemis.Shared.Identity.Services.DeleteUsersRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.FetchUserRolesAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchUserRolesFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询用户角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.GetUserRoleAsync(Artemis.Shared.Identity.Services.GetUserRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取用户角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserRoleAsync(Artemis.Shared.Identity.Services.AddUserRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserRolesAsync(Artemis.Shared.Identity.Services.AddUserRolesRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户角色
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserRoleAsync(Artemis.Shared.Identity.Services.RemoveUserRoleRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserRolesAsync(Artemis.Shared.Identity.Services.RemoveUserRolesRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.FetchUserClaimsAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchUserClaimsFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.GetUserClaimAsync(Artemis.Shared.Identity.Services.GetUserClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserClaimAsync(Artemis.Shared.Identity.Services.AddUserClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserClaimsAsync(Artemis.Shared.Identity.Services.AddUserClaimsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserClaimAsync(Artemis.Shared.Identity.Services.RemoveUserClaimRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUsersClaimAsync(Artemis.Shared.Identity.Services.RemoveUserClaimsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户凭据信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.FetchUserLoginsAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchUserLoginsFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.GetUserLoginAsync(Artemis.Shared.Identity.Services.GetUserLoginRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserLoginAsync(Artemis.Shared.Identity.Services.AddUserLoginRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.ReplaceUserLoginAsync(Artemis.Shared.Identity.Services.ReplaceUserLoginRequest,Grpc.Core.ServerCallContext)">
            <summary>
                替换用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserLoginAsync(Artemis.Shared.Identity.Services.RemoveUserLoginRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserLoginsAsync(Artemis.Shared.Identity.Services.RemoveUserLoginsRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户登录信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.FetchUserTokensAsync(Artemis.Data.Core.PageRequest{Artemis.Shared.Identity.Services.FetchUserTokensFilter},Grpc.Core.ServerCallContext)">
            <summary>
                查询用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.GetUserTokenAsync(Artemis.Shared.Identity.Services.GetUserTokenRequest,Grpc.Core.ServerCallContext)">
            <summary>
                获取用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.AddUserTokenAsync(Artemis.Shared.Identity.Services.AddUserTokenRequest,Grpc.Core.ServerCallContext)">
            <summary>
                添加用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.ReplaceUserTokenAsync(Artemis.Shared.Identity.Services.ReplaceUserTokenRequest,Grpc.Core.ServerCallContext)">
            <summary>
                替换用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserTokenAsync(Artemis.Shared.Identity.Services.RemoveUserTokenRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Artemis.App.Identity.Services.UserService.RemoveUserTokensAsync(Artemis.Shared.Identity.Services.RemoveUserTokensRequest,Grpc.Core.ServerCallContext)">
            <summary>
                删除用户令牌信息
            </summary>
            <param name="request">请求</param>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
    </members>
</doc>
