<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Artemis.App.Identity</name>
    </assembly>
    <members>
        <member name="T:Artemis.App.Identity.Interceptors.TokenInterceptor">
            <summary>
                Token侦听器
            </summary>
        </member>
        <member name="P:Artemis.App.Identity.Interceptors.TokenInterceptor.Logger">
            <summary>
            日志依赖
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Interceptors.TokenInterceptor.#ctor(Microsoft.Extensions.Logging.ILogger{Artemis.App.Identity.Interceptors.TokenInterceptor})">
            <summary>
            侦听器构造
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Artemis.App.Identity.Interceptors.TokenInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
            <summary>
                Server-side handler for intercepting and incoming unary call.
            </summary>
            <typeparam name="TRequest">Request message type for this method.</typeparam>
            <typeparam name="TResponse">Response message type for this method.</typeparam>
            <param name="request">The request value of the incoming invocation.</param>
            <param name="context">
                An instance of <see cref="T:Grpc.Core.ServerCallContext" /> representing
                the context of the invocation.
            </param>
            <param name="continuation">
                A delegate that asynchronously proceeds with the invocation, calling
                the next interceptor in the chain, or the service request handler,
                in case of the last interceptor and return the response value of
                the RPC. The interceptor can choose to call it zero or more times
                at its discretion.
            </param>
            <returns>
                A future representing the response value of the RPC. The interceptor
                can simply return the return value from the continuation intact,
                or an arbitrary response value as it sees fit.
            </returns>
        </member>
        <member name="T:Artemis.App.Identity.Migrations.InitialIdentity">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Artemis.App.Identity.Migrations.InitialIdentity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Artemis.App.Identity.Program">
            <summary>
                Program
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Program.Main(System.String[])">
            <summary>
                Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Artemis.App.Identity.Startup">
            <summary>
                启动器配置
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Startup.#ctor">
            <summary>
                启动器构造
            </summary>
        </member>
        <member name="M:Artemis.App.Identity.Startup.ConfigureBuilder(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
                配置服务
            </summary>
            <param name="builder">程序集</param>
        </member>
        <member name="M:Artemis.App.Identity.Startup.ConfigureApplication(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
                应用配置
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
