<?xml version="1.0"?>

<doc>
	<assembly>
		<name>Artemis.App.Identity</name>
	</assembly>
	<members>
		<member name="T:Artemis.App.Identity.Migrations.InitialIdentity">
			<inheritdoc />
		</member>
		<member
			name="M:Artemis.App.Identity.Migrations.InitialIdentity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
			<inheritdoc />
		</member>
		<member
			name="M:Artemis.App.Identity.Migrations.InitialIdentity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
			<inheritdoc />
		</member>
		<member
			name="M:Artemis.App.Identity.Migrations.InitialIdentity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
			<inheritdoc />
		</member>
		<member name="T:Artemis.App.Identity.Program">
			<summary>
				应用程序入口
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Program.Main(System.String[])">
			<summary>
				主函数
			</summary>
			<param name="args"></param>
		</member>
		<member name="T:Artemis.App.Identity.Services.AccountService">
			<summary>
				账户服务
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.#ctor(Artemis.Service.Identity.Managers.IIdentityAccountManager,Artemis.Service.Identity.Managers.IIdentityUserManager,Microsoft.Extensions.Caching.Distributed.IDistributedCache,Microsoft.Extensions.Options.IOptions{Artemis.Extensions.ServiceConnect.Authorization.ArtemisAuthorizationConfig},Microsoft.Extensions.Logging.ILogger{Artemis.App.Identity.Services.AccountService})">
			<summary>
				账户服务
			</summary>
			<param name="accountManager">账户管理器</param>
			<param name="userManager">用户管理器</param>
			<param name="cache"></param>
			<param name="options"></param>
			<param name="logger">日志记录器</param>
		</member>
		<member name="P:Artemis.App.Identity.Services.AccountService.AccountManager">
			<summary>
				账户管理器
			</summary>
		</member>
		<member name="P:Artemis.App.Identity.Services.AccountService.UserManager">
			<summary>
				用户管理器
			</summary>
		</member>
		<member name="P:Artemis.App.Identity.Services.AccountService.Cache">
			<summary>
				分布式缓存依赖
			</summary>
		</member>
		<member name="P:Artemis.App.Identity.Services.AccountService.Options">
			<summary>
				授权配置项
			</summary>
		</member>
		<member name="P:Artemis.App.Identity.Services.AccountService.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.SignIn(Artemis.Service.Protos.Identity.SignInRequest,Grpc.Core.ServerCallContext)">
			<summary>
				签到
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.SignUp(Artemis.Service.Protos.Identity.SignUpRequest,Grpc.Core.ServerCallContext)">
			<summary>
				签入
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.SignOut(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.ServerCallContext)">
			<summary>
				签出
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.ChangePassword(Artemis.Service.Protos.Identity.ChangePasswordRequest,Grpc.Core.ServerCallContext)">
			<summary>
				修改密码
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.ResetPassword(Artemis.Service.Protos.Identity.ResetPasswordRequest,Grpc.Core.ServerCallContext)">
			<summary>
				重置密码
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.BatchResetPasswords(Artemis.Service.Protos.Identity.BatchResetPasswordRequest,Grpc.Core.ServerCallContext)">
			<summary>
				批量重置密码
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.RecordTokenDocument(Artemis.Data.Shared.Transfer.TokenDocument,System.Threading.CancellationToken)">
			<summary>
				记录TokenDocument
			</summary>
			<param name="tokenDocument">tokenDocument</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns>认证Token</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.AccountService.EraseTokenDocument(System.String,System.Threading.CancellationToken)">
			<summary>
				擦除TokenDocument
			</summary>
			<param name="identityToken">认证token</param>
			<param name="cancellationToken">操作取消信号</param>
			<returns></returns>
		</member>
		<member name="T:Artemis.App.Identity.Services.RoleService">
			<summary>
				角色服务
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Services.SampleService">
			<summary>
				示例服务
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Services.SampleService.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
			<summary>
				构造函数
			</summary>
			<param name="loggerFactory"></param>
		</member>
		<member name="P:Artemis.App.Identity.Services.SampleService.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.SampleService.SayHelloStream(Artemis.Service.Protos.HelloRequest,Grpc.Core.IServerStreamWriter{Artemis.Service.Protos.HelloResponse},Grpc.Core.ServerCallContext)">
			<summary>
				测试服务器流式处理
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="responseStream">Used for sending responses back to the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>A task indicating completion of the handler.</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.SampleService.StreamingFromClient(Grpc.Core.IAsyncStreamReader{Artemis.Service.Protos.HelloRequest},Grpc.Core.ServerCallContext)">
			<summary>
				测试客户端流式处理
			</summary>
			<param name="requestStream">Used for reading requests from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.SampleService.StreamingBothWays(Grpc.Core.IAsyncStreamReader{Artemis.Service.Protos.HelloRequest},Grpc.Core.IServerStreamWriter{Artemis.Service.Protos.HelloResponse},Grpc.Core.ServerCallContext)">
			<summary>
				测试双向流式处理
			</summary>
			<param name="requestStream">Used for reading requests from the client.</param>
			<param name="responseStream">Used for sending responses back to the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>A task indicating completion of the handler.</returns>
		</member>
		<member name="T:Artemis.App.Identity.Services.UserService">
			<summary>
				用户服务
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.#ctor(Artemis.Service.Identity.Managers.IIdentityUserManager,Microsoft.Extensions.Logging.ILogger{Artemis.App.Identity.Services.AccountService})">
			<summary>
				账户服务
			</summary>
			<param name="userManager">用户管理器</param>
			<param name="logger">日志记录器</param>
		</member>
		<member name="P:Artemis.App.Identity.Services.UserService.UserManager">
			<summary>
				用户管理器
			</summary>
		</member>
		<member name="P:Artemis.App.Identity.Services.UserService.Logger">
			<summary>
				日志依赖
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.SearchUserInfo(Artemis.Service.Protos.Identity.SearchUserRequest,Grpc.Core.ServerCallContext)">
			<summary>
				查询用户
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.CreateUser(Artemis.Service.Protos.Identity.CreateUserRequest,Grpc.Core.ServerCallContext)">
			<summary>
				创建用户
			</summary>
			<param name="request"></param>
			<param name="context"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.UpdateUserInfo(Artemis.Service.Protos.Identity.UpdateUserRequest,Grpc.Core.ServerCallContext)">
			<summary>
				更新用户信息
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.ReadUserInfo(Artemis.Service.Protos.Identity.UserIdRequest,Grpc.Core.ServerCallContext)">
			<summary>
				读取用户信息
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.DeleteUser(Artemis.Service.Protos.Identity.UserIdRequest,Grpc.Core.ServerCallContext)">
			<summary>
				删除用户
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.SearchUserRoleInfo(Artemis.Service.Protos.Identity.SearchUserRoleRequest,Grpc.Core.ServerCallContext)">
			<summary>
				查询用户角色信息
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.ReadUserRoleInfo(Artemis.Service.Protos.Identity.UserRoleIdRequest,Grpc.Core.ServerCallContext)">
			<summary>
				获取用户角色信息
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.AddUserRole(Artemis.Service.Protos.Identity.AddUserRoleRequest,Grpc.Core.ServerCallContext)">
			<summary>
				添加用户角色
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member
			name="M:Artemis.App.Identity.Services.UserService.RemoveUserRole(Artemis.Service.Protos.Identity.UserRoleIdRequest,Grpc.Core.ServerCallContext)">
			<summary>
				移除用户角色
			</summary>
			<param name="request">The request received from the client.</param>
			<param name="context">The context of the server-side call handler being invoked.</param>
			<returns>The response to send back to the client (wrapped by a task).</returns>
		</member>
		<member name="T:Artemis.App.Identity.Validators.AddUserRoleRequestValidator">
			<summary>
				获取用户角色请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.AddUserRoleRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.BatchResetPasswordRequestValidator">
			<summary>
				批量重置密码请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.BatchResetPasswordRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.ChangePasswordRequestValidator">
			<summary>
				修改密码请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.ChangePasswordRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.CreateUserRequestValidator">
			<summary>
				创建用户请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.CreateUserRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.ResetPasswordRequestValidator">
			<summary>
				重置密码请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.ResetPasswordRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.SearchUserRequestValidator">
			<summary>
				查找用户请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.SearchUserRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.SearchUserRoleRequestValidator">
			<summary>
				查找用户角色请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.SearchUserRoleRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.SignInRequestValidator">
			<summary>
				签到请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.SignInRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.SignUpRequestValidator">
			<summary>
				签入请求验证
			</summary>
		</member>
		<member
			name="M:Artemis.App.Identity.Validators.SignUpRequestValidator.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions})">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.UpdateUserRequestValidator">
			<summary>
				更新用户请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.UpdateUserRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.UserIdRequestValidator">
			<summary>
				更新用户请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.UserIdRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
		<member name="T:Artemis.App.Identity.Validators.UserRoleIdRequestValidator">
			<summary>
				获取用户角色请求验证
			</summary>
		</member>
		<member name="M:Artemis.App.Identity.Validators.UserRoleIdRequestValidator.#ctor">
			<summary>
				验证器构造
			</summary>
		</member>
	</members>
</doc>