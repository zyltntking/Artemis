// <auto-generated />
using System;
using Artemis.Service.Resource.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Artemis.App.Resource.Migrations
{
    [DbContext(typeof(ResourceContext))]
    [Migration("20240806064407_AddSystemModule")]
    partial class AddSystemModule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Resource")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDataDictionary", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("字典代码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("字典描述");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("字典名称");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("字典类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<bool>("Valid")
                        .HasColumnType("boolean")
                        .HasComment("字典是否有效");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisDataDictionary");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_ArtemisDataDictionary_Code");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisDataDictionary_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionary_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionary_DeletedAt");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisDataDictionary_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisDataDictionary_Name");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisDataDictionary_RemoveBy");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionary_UpdatedAt");

                    b.ToTable("ArtemisDataDictionary", "Resource", t =>
                        {
                            t.HasComment("数据字典数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDataDictionaryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<Guid>("DataDictionaryId")
                        .HasColumnType("uuid")
                        .HasComment("数据字典标识");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("数据项目描述");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("数据项目键");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<bool>("Valid")
                        .HasColumnType("boolean")
                        .HasComment("数据项目是否有效");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasComment("数据项目值");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisDataDictionaryItem");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_DeletedAt");

                    b.HasIndex("Key")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_Key");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_ModifyBy");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_RemoveBy");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_UpdatedAt");

                    b.HasIndex("DataDictionaryId", "Key")
                        .IsUnique()
                        .HasDatabaseName("IX_ArtemisDataDictionaryItem_DataDictionaryId_Key");

                    b.ToTable("ArtemisDataDictionaryItem", "Resource", t =>
                        {
                            t.HasComment("数据字典项目数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("设备代码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasComment("设备描述");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("安装日期");

                    b.Property<DateTime?>("MaintenanceDate")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("维护日期");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("设备型号");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("设备名称");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("购买日期");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("设备序列号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("设备状态");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("设备类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<DateTime?>("WarrantyDate")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("保修日期");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisDevice");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisDevice_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisDevice_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisDevice_DeletedAt");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisDevice_ModifyBy");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisDevice_RemoveBy");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisDevice_UpdatedAt");

                    b.ToTable("ArtemisDevice", "Resource", t =>
                        {
                            t.HasComment("设备数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDivision", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("行政区划代码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("行政区划全名");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasComment("行政区划级别");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("行政区划名称");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasComment("上级行政区划标识");

                    b.Property<string>("Pinyin")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("行政区划拼音");

                    b.Property<string>("Remark")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasComment("行政区划备注");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("行政区划类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisDivision");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_ArtemisDivision_Code");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisDivision_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisDivision_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisDivision_DeletedAt");

                    b.HasIndex("Level")
                        .HasDatabaseName("IX_ArtemisDivision_Level");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisDivision_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisDivision_Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisDivision_RemoveBy");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_ArtemisDivision_Type");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisDivision_UpdatedAt");

                    b.ToTable("ArtemisDivision", "Resource", t =>
                        {
                            t.HasComment("行政区划数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("机构地址");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("机构编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("机构联系电话");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasComment("机构描述");

                    b.Property<string>("DesignCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("设计编码");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("机构邮箱");

                    b.Property<DateTime?>("EstablishTime")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("机构成立时间");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("机构名称");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasComment("父级机构标识");

                    b.Property<string>("PostCode")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("机构邮编");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("机构状态");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("机构类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<string>("WebSite")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("机构网站");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisOrganization");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_ArtemisOrganization_Code");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisOrganization_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisOrganization_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisOrganization_DeletedAt");

                    b.HasIndex("DesignCode")
                        .IsUnique()
                        .HasDatabaseName("IX_ArtemisOrganization_DesignCode");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisOrganization_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisOrganization_Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisOrganization_RemoveBy");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_ArtemisOrganization_Status");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_ArtemisOrganization_Type");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisOrganization_UpdatedAt");

                    b.ToTable("ArtemisOrganization", "Resource", t =>
                        {
                            t.HasComment("组织机构数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisStandardCatalog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准目录编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("标准目录描述");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("标准目录名称");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<string>("State")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准目录状态");

                    b.Property<string>("Type")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准目录类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<bool>("Valid")
                        .HasColumnType("boolean")
                        .HasComment("是否生效");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisStandardCatalog");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_Code");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_DeletedAt");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_Name");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_RemoveBy");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_Type");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisStandardCatalog_UpdatedAt");

                    b.ToTable("ArtemisStandardCatalog", "Resource", t =>
                        {
                            t.HasComment("标准目录数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisStandardItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准项目编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("标准项目描述");

                    b.Property<string>("Maximum")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准项目最大值");

                    b.Property<string>("Minimum")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("标准项目最小值");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("标准项目名称");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<Guid>("StandardCatalogId")
                        .HasColumnType("uuid")
                        .HasComment("标准目录标识");

                    b.Property<string>("Template")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasComment("标准项目模板");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisStandardItem");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_ArtemisStandardItem_Code");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisStandardItem_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisStandardItem_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisStandardItem_DeletedAt");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisStandardItem_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisStandardItem_Name");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisStandardItem_RemoveBy");

                    b.HasIndex("StandardCatalogId");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisStandardItem_UpdatedAt");

                    b.ToTable("ArtemisStandardItem", "Resource", t =>
                        {
                            t.HasComment("标准项目数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisSystemModule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasComment("标识");

                    b.Property<string>("ClaimStamp")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("凭据戳");

                    b.Property<string>("Component")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("组件路径");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("并发锁");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("创建者标识");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("创建时间");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("删除时间");

                    b.Property<string>("Icon")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("模块图标");

                    b.Property<bool>("IsFrame")
                        .HasColumnType("boolean")
                        .HasComment("是否外链");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("更新者标识");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasComment("模块序列");

                    b.Property<string>("Parameters")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasComment("路由参数");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasComment("上级模块标识");

                    b.Property<string>("Path")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("路由地址");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasComment("备注");

                    b.Property<string>("RemoveBy")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("删除者标识");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasComment("模块状态");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("模块类型");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasComment("更新时间");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean")
                        .HasComment("是否显示");

                    b.HasKey("Id")
                        .HasName("PK_ArtemisSystemModule");

                    b.HasIndex("CreateBy")
                        .HasDatabaseName("IX_ArtemisSystemModule_CreateBy");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_ArtemisSystemModule_CreatedAt");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_ArtemisSystemModule_DeletedAt");

                    b.HasIndex("ModifyBy")
                        .HasDatabaseName("IX_ArtemisSystemModule_ModifyBy");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_ArtemisSystemModule_Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("RemoveBy")
                        .HasDatabaseName("IX_ArtemisSystemModule_RemoveBy");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_ArtemisSystemModule_UpdatedAt");

                    b.ToTable("ArtemisSystemModule", "Resource", t =>
                        {
                            t.HasComment("系统模块数据集");
                        });
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDataDictionaryItem", b =>
                {
                    b.HasOne("Artemis.Service.Resource.Context.ArtemisDataDictionary", "DataDictionary")
                        .WithMany("Items")
                        .HasForeignKey("DataDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ArtemisDataDictionaryItem_ArtemisDataDictionary");

                    b.Navigation("DataDictionary");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDivision", b =>
                {
                    b.HasOne("Artemis.Service.Resource.Context.ArtemisDivision", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ArtemisDivision_ArtemisDivision");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisOrganization", b =>
                {
                    b.HasOne("Artemis.Service.Resource.Context.ArtemisOrganization", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ArtemisOrganization_ArtemisOrganization");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisStandardItem", b =>
                {
                    b.HasOne("Artemis.Service.Resource.Context.ArtemisStandardCatalog", "Catalog")
                        .WithMany("Items")
                        .HasForeignKey("StandardCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ArtemisStandardItem_ArtemisStandardCatalog");

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisSystemModule", b =>
                {
                    b.HasOne("Artemis.Service.Resource.Context.ArtemisSystemModule", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ArtemisSystemModule_ArtemisSystemModule");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDataDictionary", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisDivision", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisOrganization", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisStandardCatalog", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Artemis.Service.Resource.Context.ArtemisSystemModule", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
