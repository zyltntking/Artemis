syntax = "proto3";

option csharp_namespace = "Artemis.Service.Protos.Business.VisionScreen";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "business/visionscreening/visionscreening.proto";
import "common.proto";

package Artemis.Service.Protos.Business.VisionScreen;

// 小程序家长终端服务
service WxParentTerminalService{

	// 获取个人中心孩子信息
	rpc FetchChildrenInfo(EmptyRequest) returns (FetchChildInfoResponse) {
		option (google.api.http) = {
			get: "/api/BusinessService/ParentTerminal/FetchChildrenInfo"
		};
	}

	// 查询孩子历史筛查记录列表
	rpc FetchChildHistoryRecordInfoList(FetchChildHistoryRecordInfoListRequest) returns (FetchChildHistoryRecordInfoListResponse) {
		option (google.api.http) = {
			get: "/api/BusinessService/ParentTerminal/FetchChildHistoryRecordInfoList"
		};
	}

	// 获取个人中心消息信息
	rpc FetchUserMessageInfo(EmptyRequest) returns (FetchParentUserMessageInfoResponse) {
		option (google.api.http) = {
			get: "/api/BusinessService/ParentTerminal/FetchUserMessageInfo"
		};
	}

	// 反馈筛查记录后续处理
	rpc FeedbackRecord(FeedbackRecordRequest) returns (AffectedResponse) {
		option (google.api.http) = {
			post: "/api/BusinessService/ParentTerminal/FeedbackRecord"
			body: "*"
		};
	}

	// 查询孩子信息
	rpc QueryChild(QueryChildRequest) returns (QueryChildResponse) {
		option (google.api.http) = {
			get: "/api/BusinessService/ParentTerminal/QueryChild"
		};
	}

	// 绑定孩子关系
	rpc BindChildRelation(BindChildRequest) returns (AffectedResponse) {
		option (google.api.http) = {
			post: "/api/BusinessService/ParentTerminal/BindChildRelation"
			body: "*"
		};
	}

	// 上传孩子眼部照片
	rpc UploadChildEyePhoto(UploadChildEyePhotoRequest) returns (AffectedResponse) {
		option (google.api.http) = {
			post: "/api/BusinessService/ParentTerminal/UploadChildEyePhoto"
			body: "*"
		};
	}

	// 读取筛查结果
	rpc ReadScreenRecord(ReadScreenRecordRequest) returns (ReadScreenRecordResponse) {
		option (google.api.http) = {
			get: "/api/BusinessService/ParentTerminal/ReadScreenRecord"
		};
	}
}

// 孩子信息数据包
message ChildInfoPacket {
	// 学生标识
	// @required
	// @guid
	string StudentId = 1;
	// 学生姓名
	// @required
	// @maxLength(128)
	string Name = 2;
	// 学生性别
	// @maxLength(32)
	google.protobuf.StringValue Gender = 3;
	// 学生生日
	// @datetime
	google.protobuf.StringValue Birthday = 4;
	// 学生民族
	// @maxLength(32)
	google.protobuf.StringValue Nation = 5;
	// 学籍号
	// @maxLength(32)
	google.protobuf.StringValue StudentNumber = 6;
	// 学校名称
	// @maxLength(128)
	google.protobuf.StringValue SchoolName = 7;
	// 班级名称
	// @maxLength(128)
	google.protobuf.StringValue ClassName = 8;
	// 亲属关系
	// @maxLength(32)
	google.protobuf.StringValue Relation = 9;
	// 左眼照片
	google.protobuf.StringValue LeftEyePhoto = 10;
	// 右眼照片
	google.protobuf.StringValue RightEyePhoto = 11;
	// 双眼照片
	google.protobuf.StringValue BothEyePhoto = 12;
}

// 孩子信息
message ChildInfo {
	// 孩子信息数据
	// @required
	ChildInfoPacket Child = 1;
	// 历史筛查记录数
	// @required
	int32 HistoryRecords = 2;
}

// 获取孩子信息响应
message FetchChildInfoResponse{
	// 状态码
	int32 Code = 1;
	// 是否成功
	bool Succeeded = 2;
	// 消息
	string Message = 3;
	// 错误
	// @exception
	google.protobuf.StringValue Error = 4;
    // 响应时间
	// @datetime
	string DateTime = 5;
	// 响应时间戳
	// @timestamp
	int64 Timestamp = 6;
	// 验光仪数据
	// @required
	repeated ChildInfo Data = 7;
}

// 查询孩子历史筛查记录列表请求
message FetchChildHistoryRecordInfoListRequest{
	// 学生标识
	// @required
	// @guid
	string StudentId = 1;
}

// 孩子历史筛查记录数据包
message ChildHistoryRecordPacket{
	// 记录标识
	// @required
	// @guid
	string Id = 1;
	// 学生标识
	// @guid
	google.protobuf.StringValue StudentId = 2;
	// 检查时间
	// @datetime
	google.protobuf.StringValue CheckTime = 3;
	// 是否已反馈
	// @required
	bool IsFeedback = 4;
}

// 查询孩子历史筛查记录列表响应
message FetchChildHistoryRecordInfoListResponse{
	// 状态码
	int32 Code = 1;
	// 是否成功
	bool Succeeded = 2;
	// 消息
	string Message = 3;
	// 错误
	// @exception
	google.protobuf.StringValue Error = 4;
	// 响应时间
	// @datetime
	string DateTime = 5;
	// 响应时间戳
	// @timestamp
	int64 Timestamp = 6;
	// 孩子历史筛查记录数据
	// @required
	repeated ChildHistoryRecordPacket Data = 7;
}

// 档案反馈数据包
message FeedbackContentPacket{
	// 是否已处理
	bool IsCheck = 1;
	// 处理日期
	// @datetime
	google.protobuf.StringValue CheckDate = 2;
	// @datetime
	google.protobuf.StringValue FeedbackTime = 3;
	// 反馈内容
	repeated string Content = 4;
}

// 反馈记录数据包
message FeedbackRecordPacket{
	// 记录标识
	// @required
	// @guid
	string RecordId = 1;
	// 学生标识
	// @required
	// @guid
	string StudentId = 2;
	// 学生姓名
	google.protobuf.StringValue StudentName = 3;
	// 检查时间
	// @datetime
	google.protobuf.StringValue CheckTime = 4;
	// 是否已反馈
	// @required
	bool IsFeedback = 5;
	// 反馈内容
	FeedbackContentPacket FeedbackContent = 6;
}

// 家长个人中心消息信息
message ParentUserMessageInfo{
	// 通知消息数据
	// @required
	repeated NotificationMessagePacket NotificationMessages = 1;
	// 反馈记录数据
	// @required
	repeated FeedbackRecordPacket FeedbackRecords = 2;
}

// 获取家长端个人中心消息信息响应
message FetchParentUserMessageInfoResponse{
	// 状态码
	int32 Code = 1;
	// 是否成功
	bool Succeeded = 2;
	// 消息
	string Message = 3;
	// 错误
	// @exception
	google.protobuf.StringValue Error = 4;
	// 响应时间
	// @datetime
	string DateTime = 5;
	// 响应时间戳
	// @timestamp
	int64 Timestamp = 6;
	// 个人中心消息信息
	// @required
	ParentUserMessageInfo Data = 7;
}

// 反馈筛查记录后续处理请求
message FeedbackRecordRequest{
	// 记录标识
	// @required
	// @guid
	string RecordId = 1;

	// 是否进一步检查
	// @required
	bool IsChedk = 2;

	// 检查时间
	// @datetime
	google.protobuf.StringValue CheckTime = 3;

	// 反馈内容
	// @required
	repeated string Content = 4;
}

// 查询孩子信息请求
message QueryChildRequest{
	// 学籍号
	// @required
	// @maxLength(32)
	string StudentNumber = 1;
}

// 查询孩子信息响应
message QueryChildResponse{
	// 状态码
	int32 Code = 1;
	// 是否成功
	bool Succeeded = 2;
	// 消息
	string Message = 3;
	// 错误
	// @exception
	google.protobuf.StringValue Error = 4;
	// 响应时间
	// @datetime
	string DateTime = 5;
	// 响应时间戳
	// @timestamp
	int64 Timestamp = 6;
	// 孩子信息数据
	// @required
	ChildInfoPacket Data = 7;
}

// 绑定孩子请求
message BindChildRequest{
	// 学生标识
	// @required
	// @guid
	string StudentId = 1;
	// 亲属
	// @required
	// @maxLength(32)
	string Relation = 2;
}

// 上传学生眼部照片请求
message UploadChildEyePhotoRequest{
	// 学生标识
	// @required
	// @guid
	string StudentId = 1;
	// 眼部照片
	// @required
	// @base64
	string EyePhoto = 2;
	// 眼部照片类型
	// @required
	// @maxLength(32)
	string EyePhotoType = 3;
}



// 读取筛查结果
message ReadScreenRecordRequest{
	// 学生标识
	// @required
	// @guid
	string StudentId = 1;
	// 记录标识
	// @guid
	google.protobuf.StringValue RecordId = 2;
}

// 筛查结果数据包
message ScreenRecordPacket{
	// 记录标识
	// @required
	// @guid
	string Id = 1;
	// 学生标识
	// @required
	// @guid
	string StudentId = 2;
	// 左眼裸眼视力
	google.protobuf.DoubleValue LeftNakedEyeVision = 3;
	// 右眼裸眼视力
	google.protobuf.DoubleValue RightNakedEyeVision = 4;
	// 左眼矫正视力
	google.protobuf.DoubleValue LeftCorrectedVision = 5;
	// 右眼矫正视力
	google.protobuf.DoubleValue RightCorrectedVision = 6;
	// 左眼散光度数
	google.protobuf.DoubleValue LeftAstigmatism = 7;
	// 右眼散光度数
	google.protobuf.DoubleValue RightAstigmatism = 8;
	// 瞳距
	google.protobuf.DoubleValue PupilDistance = 9;
	// 左眼球镜
	google.protobuf.DoubleValue LeftSphere = 10;
	// 右眼球镜
	google.protobuf.DoubleValue RightSphere = 11;
	// 左眼柱镜
	google.protobuf.DoubleValue LeftCylinder = 12;
	// 右眼柱镜
	google.protobuf.DoubleValue RightCylinder = 13;
	// 左眼轴位
	google.protobuf.DoubleValue LeftAxis = 14;
	// 右眼轴位
	google.protobuf.DoubleValue RightAxis = 15;
	// 左眼等效球镜
	google.protobuf.DoubleValue LeftEquivalentSphere = 16;
	// 右眼等效球镜
	google.protobuf.DoubleValue RightEquivalentSphere = 17;
	// 左眼是否佩戴角膜塑形镜
	google.protobuf.BoolValue IsWareLeftOkLenses = 18;
	// 右眼是否佩戴角膜塑形镜
	google.protobuf.BoolValue IsWareRightOkLenses = 19;
	// 左眼角膜曲率r1(mm)
	google.protobuf.DoubleValue LeftCornealCurvatureR1 = 20;
	// 右眼角膜曲率r1(mm)
	google.protobuf.DoubleValue RightCornealCurvatureR1 = 21;
	// 左眼角膜曲率r1(d)
	google.protobuf.DoubleValue LeftCornealCurvatureD1 = 22;
	// 右眼角膜曲率r1(d)
	google.protobuf.DoubleValue RightCornealCurvatureD1 = 23;
	// 左眼角膜曲率r1角度
	google.protobuf.DoubleValue LeftCornealCurvatureAngle1 = 24;
	// 右眼角膜曲率r1角度
	google.protobuf.DoubleValue RightCornealCurvatureAngle1 = 25;
	// 左眼角膜曲率r2(mm)
	google.protobuf.DoubleValue LeftCornealCurvatureR2 = 26;
	// 右眼角膜曲率r2(mm)
	google.protobuf.DoubleValue RightCornealCurvatureR2 = 27;
	// 左眼角膜曲率r2(d)
	google.protobuf.DoubleValue LeftCornealCurvatureD2 = 28;
	// 右眼角膜曲率r2(d)
	google.protobuf.DoubleValue RightCornealCurvatureD2 = 29;
	// 左眼角膜曲率r2角度
	google.protobuf.DoubleValue LeftCornealCurvatureAngle2 = 30;
	// 右眼角膜曲率r2角度
	google.protobuf.DoubleValue RightCornealCurvatureAngle2 = 31;
	// 左眼角膜曲率平均值(mm)
	google.protobuf.DoubleValue LeftCornealCurvatureAverage = 32;
	// 右眼角膜曲率平均值(mm)
	google.protobuf.DoubleValue RightCornealCurvatureAverage = 33;
	// 左眼角膜曲率平均值(d)
	google.protobuf.DoubleValue LeftCornealCurvatureAverageD = 34;
	// 右眼角膜曲率平均值(d)
	google.protobuf.DoubleValue RightCornealCurvatureAverageD = 35;
	// 左眼角膜曲率散光度
	google.protobuf.DoubleValue LeftCornealCurvatureAstigmatism = 36;
	// 右眼角膜曲率散光度
	google.protobuf.DoubleValue RightCornealCurvatureAstigmatism = 37;
	// 筛查时间
	google.protobuf.StringValue CheckTime = 38;
	// 筛查结果
	google.protobuf.StringValue Result = 39;
}

// 读取筛查结果响应
message ReadScreenRecordResponse{
	// 状态码
	int32 Code = 1;
	// 是否成功
	bool Succeeded = 2;
	// 消息
	string Message = 3;
	// 错误
	// @exception
	google.protobuf.StringValue Error = 4;
	// 响应时间
	// @datetime
	string DateTime = 5;
	// 响应时间戳
	// @timestamp
	int64 Timestamp = 6;
	// 筛查结果数据
	// @required
	ScreenRecordPacket Data = 7;
}
