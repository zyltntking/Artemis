<?xml version="1.0"?>

<doc>
	<assembly>
		<name>Artemis.Data.Core</name>
	</assembly>
	<members>
		<member name="T:Artemis.Data.Core.IAttachResult`2">
			<summary>
				结果数据附加集合
			</summary>
			<typeparam name="TResult">结果</typeparam>
			<typeparam name="TAttach">附加数据</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IAttachResult`2.Result">
			<summary>
				结果
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IAttachResult`2.Attach">
			<summary>
				附加数据
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.AttachResult`2">
			<summary>
				结果数据附加集合记录
			</summary>
			<typeparam name="TResult">结果</typeparam>
			<typeparam name="TAttach">附加</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.AttachResult`2.Result">
			<summary>
				结果
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.AttachResult`2.Attach">
			<summary>
				附加数据
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.DataParser">
			<summary>
				数据解析器
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.ToUnixTimeStamp(System.DateTime)">
			<summary>
				获取Unix时间戳
			</summary>
			<param name="time">时间</param>
			<returns>时间戳</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.ToDateTime(System.Int64)">
			<summary>
				获取本地时间
			</summary>
			<param name="timestamp">时间戳</param>
			<returns>Utc时间</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.IdFromString``1(System.String)">
			<summary>
				string转id
			</summary>
			<param name="id">The id to convert.</param>
			<returns>An instance of <typeparamref name="TKey" /> representing the provided <paramref name="id" />.</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.IdToString``1(``0)">
			<summary>
				id转string
			</summary>
			<param name="id">The id to convert.</param>
			<returns>An <see cref="T:System.String" /> representation of the provided <paramref name="id" />.</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.GuidFromString(System.String)">
			<summary>
				string装guid
			</summary>
			<param name="id"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.GuidToString(System.Guid)">
			<summary>
				Guid转String
			</summary>
			<param name="id"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.Serialize``1(``0,System.Boolean)">
			<summary>
				序列化
			</summary>
			<typeparam name="T">实体类型</typeparam>
			<param name="model">实体模型</param>
			<param name="writeIndented">是否启用格式化</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.DataParser.Deserialize``1(System.String)">
			<summary>
				反序列化
			</summary>
			<typeparam name="T"></typeparam>
			<param name="json"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Data.Core.ByteParser">
			<summary>
				字节码转换器
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.ByteParser.ExtendBytes(System.Byte[],System.Int64)">
			<summary>
				扩展Bytes数组
			</summary>
			<param name="sourceArray">源数组</param>
			<param name="extendLength">扩展长度</param>
			<returns>扩展结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.ByteParser.FixedBytes(System.Byte[])">
			<summary>
				固定字节码
			</summary>
			<param name="bytes">字节码</param>
			<returns>输入的字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.ByteParser.LongToBytes(System.Int64)">
			<summary>
				Long转Bytes(高位优先)
			</summary>
			<param name="number">long</param>
			<returns>bytes</returns>
			<code><![CDATA[var bytes = new byte[8];]]></code>
			<code><![CDATA[bytes[0] = (byte)((number >> 56) & 0xFF);]]></code>
			<code><![CDATA[bytes[1] = (byte)((number >> 48) & 0xFF);]]></code>
			<code><![CDATA[bytes[2] = (byte)((number >> 40) & 0xFF);]]></code>
			<code><![CDATA[bytes[3] = (byte)((number >> 32) & 0xFF);]]></code>
			<code><![CDATA[bytes[4] = (byte)((number >> 24) & 0xFF);]]></code>
			<code><![CDATA[bytes[5] = (byte)((number >> 16) & 0xFF);]]></code>
			<code><![CDATA[bytes[6] = (byte)((number >> 8) & 0xFF);]]></code>
			<code><![CDATA[bytes[7] = (byte)(number & 0xFF);]]></code>
		</member>
		<member name="M:Artemis.Data.Core.ByteParser.BytesToLong(System.Byte[],System.Int32)">
			<summary>
				Bytes转Long
			</summary>
			<param name="bytes">bytes</param>
			<param name="index">转换索引</param>
			<returns>long</returns>
			<code><![CDATA[((long)bytes[offset] &lt;&lt; 56) |]]></code>
			<code><![CDATA[((long)bytes[offset + 1] &lt;&lt; 48) |]]></code>
			<code><![CDATA[((long)bytes[offset + 2] &lt;&lt; 40) |]]></code>
			<code><![CDATA[((long)bytes[offset + 3] &lt;&lt; 32) |]]></code>
			<code><![CDATA[((long)bytes[offset + 4] &lt;&lt; 24) |]]></code>
			<code><![CDATA[((long)bytes[offset + 5] &lt;&lt; 16) |]]></code>
			<code><![CDATA[((long)bytes[offset + 6] &lt;&lt; 8) |]]></code>
			<code><![CDATA[bytes[offset + 7];]]></code>
		</member>
		<member name="T:Artemis.Data.Core.IResultBase">
			<summary>
				数据结果协议模板接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.Code">
			<summary>
				消息码
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.Succeeded">
			<summary>
				操作是否成功
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.Message">
			<summary>
				消息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.Error">
			<summary>
				异常信息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.DateTime">
			<summary>
				本地时间戳
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase.Timestamp">
			<summary>
				时间戳
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IResultBase`1">
			<summary>
				数据结果协议模板接口
			</summary>
			<typeparam name="T">模板类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IResultBase`1.Data">
			<summary>
				数据
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.DataResult`1">
			<summary>
				数据结果协议模板接口
			</summary>
			<typeparam name="T">模板类型</typeparam>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.#ctor">
			<summary>
				空构造
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.#ctor(System.Int32,System.String,System.Exception)">
			<summary>
				异常构造
			</summary>
			<param name="code">消息码</param>
			<param name="message">消息</param>
			<param name="exception">异常</param>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.#ctor(System.Int32,System.String,`0)">
			<summary>
				成功构造
			</summary>
			<param name="code">消息码</param>
			<param name="message">消息</param>
			<param name="data">数据</param>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.InnerException">
			<summary>
				内部异常
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Descriptor">
			<summary>
				描述器
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.AddDescriptor(System.String,System.String)">
			<summary>
				添加描述器
			</summary>
			<param name="key"></param>
			<param name="value"></param>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.GetDescriptor">
			<summary>
				获取描述器
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.SetException(System.Exception)">
			<summary>
				设置异常
			</summary>
			<param name="exception">异常</param>
		</member>
		<member name="M:Artemis.Data.Core.DataResult`1.GetException">
			<summary>
				获取异常
			</summary>
			<returns></returns>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Code">
			<summary>
				消息码
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Succeeded">
			<summary>
				是否成功
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Message">
			<summary>
				消息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Error">
			<summary>
				异常信息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.DateTime">
			<summary>
				本地时间戳
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Timestamp">
			<summary>
				时间戳
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.DataResult`1.Data">
			<summary>
				数据
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.DataResult">
			<summary>
				数据结果生成函数集
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Success``1(``0,System.String)">
			<summary>
				生成成功结果
			</summary>
			<typeparam name="T">数据类型</typeparam>
			<param name="data">数据</param>
			<param name="message">消息</param>
			<returns>成功结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Success(System.String)">
			<summary>
				生成成功结果
			</summary>
			<param name="message">消息</param>
			<returns>成功结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Fail``1(System.String)">
			<summary>
				生成失败结果
			</summary>
			<typeparam name="T">数据类型</typeparam>
			<param name="message">消息</param>
			<returns>失败结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Fail(System.String)">
			<summary>
				生成失败结果
			</summary>
			<param name="message">消息</param>
			<returns>失败结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Exception``1(System.Exception,System.Int32,System.String)">
			<summary>
				生成异常结果
			</summary>
			<param name="exception">异常</param>
			<param name="code">结果编码</param>
			<param name="message">消息</param>
			<returns>异常结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.Exception(System.Exception,System.Int32,System.String)">
			<summary>
				生成异常结果
			</summary>
			<param name="exception">异常</param>
			<param name="code">结果编码</param>
			<param name="message">结果消息</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.DataResult.GenerateResult``1(System.Int32,System.String,``0,System.Exception)">
			<summary>
				生成数据结果
			</summary>
			<typeparam name="T">数据类型</typeparam>
			<param name="code">结果状态编码</param>
			<param name="message">结果消息</param>
			<param name="data">结果数据</param>
			<param name="exception"></param>
			<returns>数据结果</returns>
		</member>
		<member name="T:Artemis.Data.Core.ResultStatus">
			<summary>
				结果状态
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.ResultStatus.Success">
			<summary>
				成功
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.ResultStatus.Fail">
			<summary>
				失败
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.ResultStatus.Exception">
			<summary>
				异常
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.EmptyRecord">
			<summary>
				空记录
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.KeyRecord">
			<summary>
				含键记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.KeyRecord.Id">
			<summary>
				标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.KeyRecord`1">
			<summary>
				含键记录
			</summary>
			<typeparam name="TKey"></typeparam>
		</member>
		<member name="P:Artemis.Data.Core.KeyRecord`1.Id">
			<summary>
				标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.ArtemisException">
			<summary>
				Artemis系统日志
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.ArtemisException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="errorMessage">错误消息</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="P:Artemis.Data.Core.Exceptions.ArtemisException.ErrorMessage">
			<summary>
				错误信息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Exceptions.ArtemisException.ErrorCode">
			<summary>
				错误编码
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.ClaimInvalidException">
			<summary>
				凭据无效异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.ClaimInvalidException.#ctor">
			<summary>
				构造
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.ClaimInvalidException.#ctor(System.String)">
			<summary>
				构造
			</summary>
			<param name="actionName">操作名</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.CreateInstanceException">
			<summary>
				创建实例异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.CreateInstanceException.#ctor">
			<summary>
				构造
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.CreateInstanceException.#ctor(System.String)">
			<summary>
				构造
			</summary>
			<param name="instanceName">实例名</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.EntityHasBeenSetException">
			<summary>
				实体查询失败异常
			</summary>
		</member>
		<member
			name="M:Artemis.Data.Core.Exceptions.EntityHasBeenSetException.#ctor(System.String,System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="entityName"></param>
			<param name="flag"></param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.EntityNotFoundException">
			<summary>
				实体查询失败异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.EntityNotFoundException.#ctor(System.String,System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="entityName"></param>
			<param name="flag"></param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.EnumerationNotMatchException">
			<summary>
				枚举类不匹配异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.EnumerationNotMatchException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="errorMessage">错误消息</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.ExceptionCode">
			<summary>
				异常编码
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.ArtemisException">
			<summary>
				Artemis异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.CreateInstanceException">
			<summary>
				创建实例异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.EntityNotFoundException">
			<summary>
				实体查询失败异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.EntityHasBeenSetException">
			<summary>
				实体已存在异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.InstanceNotImplementException">
			<summary>
				实例未设置异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.MapTargetNullException">
			<summary>
				映射目标空异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.EnumerationNotMatchException">
			<summary>
				枚举类不匹配异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.StoreDisposedException">
			<summary>
				存储已被释放异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.StoreParameterNullException">
			<summary>
				存储参数空异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.ManagerDisposedException">
			<summary>
				管理器已被释放异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.ClaimInvalidException">
			<summary>
				凭据无效异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.NotSupportEmailException">
			<summary>
				认证不支持邮箱异常
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Exceptions.ExceptionCode.NotSupportPhoneNumberException">
			<summary>
				认证不支持手机号码异常
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.InstanceNotImplementException">
			<summary>
				缓存未设置异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.InstanceNotImplementException.#ctor">
			<summary>
				错误构造
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.InstanceNotImplementException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="instanceName">错误消息</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.ManagerDisposedException">
			<summary>
				管理器已被释放异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.ManagerDisposedException.#ctor(System.Type)">
			<summary>
				错误构造
			</summary>
			<param name="storeType"></param>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.ManagerDisposedException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="errorMessage">错误消息</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.MapTargetNullException">
			<summary>
				Represents errors that occur during an interop call from .NET to MapTargetNull.
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.MapTargetNullException.#ctor(System.String)">
			<summary>
				Constructs an instance of <see cref="T:Artemis.Data.Core.Exceptions.MapTargetNullException" />.
			</summary>
			<param name="message">The exception message.</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.StoreDisposedException">
			<summary>
				存储已被释放异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.StoreDisposedException.#ctor(System.Type)">
			<summary>
				错误构造
			</summary>
			<param name="storeType"></param>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.StoreDisposedException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="errorMessage">错误消息</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Exceptions.StoreParameterNullException">
			<summary>
				存储参数空异常
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Exceptions.StoreParameterNullException.#ctor(System.String,System.Int32)">
			<summary>
				错误构造
			</summary>
			<param name="parameterName">参数名</param>
			<param name="errorCode">错误编码</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.IEnumeration`1">
			<summary>
				枚举接口
			</summary>
			<typeparam name="TEnum">枚举类</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.IEnumeration`1.Name">
			<summary>
				枚举名称
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.IEnumeration`1.Id">
			<summary>
				枚举ID
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Enumeration">
			<summary>
				枚举类
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Enumeration.Name">
			<summary>
				枚举名称
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Enumeration.Id">
			<summary>
				枚举ID
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.CompareTo(System.Object)">
			<summary>
				比较
			</summary>
			<param name="other">其他</param>
			<returns>比较结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.Equals(Artemis.Data.Core.Fundamental.Enumeration)">
			<summary>Indicates whether the current object is equal to another object of the same type.</summary>
			<param name="other">An object to compare with this object.</param>
			<returns>
				<see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise,
				<see langword="false" />.
			</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.FromValue``1(System.Int32)">
			<summary>
				从值获取枚举
			</summary>
			<typeparam name="T">枚举类型</typeparam>
			<param name="id">值</param>
			<returns>枚举成员</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.FromName``1(System.String)">
			<summary>
				从名称获取枚举
			</summary>
			<typeparam name="T">枚举类型</typeparam>
			<param name="name">枚举成员名称</param>
			<returns>枚举成员</returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Enumeration.AbsoluteDifference(Artemis.Data.Core.Fundamental.Enumeration,Artemis.Data.Core.Fundamental.Enumeration)">
			<summary>
				绝对值差
			</summary>
			<param name="lhs">左手资源</param>
			<param name="rhs">右手资源</param>
			<returns>差值</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.GetAll``1">
			<summary>
				获取枚举类的所有枚举成员
			</summary>
			<typeparam name="T">枚举类</typeparam>
			<returns>枚举成员</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.GetAllName(System.Type)">
			<summary>
				获取字符串枚举成员
			</summary>
			<param name="type">枚举类</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.GetAllId(System.Type)">
			<summary>
				获取id枚举成员
			</summary>
			<param name="type">枚举类</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Enumeration.Parse``2(``1,System.String,System.Func{``0,System.Boolean})">
			<summary>
				转换函数
			</summary>
			<typeparam name="T">枚举类</typeparam>
			<typeparam name="TK">源类</typeparam>
			<param name="value">源值</param>
			<param name="description">描述</param>
			<param name="predicate">匹配表达式</param>
			<returns>枚举成员</returns>
			<exception cref="T:System.InvalidOperationException">无效操作异常</exception>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.ToString">
			<summary>
				转为字符串
			</summary>
			<returns>字符串</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.Equals(System.Object)">
			<summary>
				等于
			</summary>
			<param name="obj">对象</param>
			<returns>是否相等</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Enumeration.GetHashCode">
			<summary>
				获取哈希码
			</summary>
			<returns>哈希码</returns>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.EnumerationJsonConverter`1">
			<summary>
				枚举类Json转换器
			</summary>
			<typeparam name="T"></typeparam>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.EnumerationJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
			<summary>Reads and converts the JSON to type <typeparamref name="T" />.</summary>
			<param name="reader">The reader.</param>
			<param name="typeToConvert">The type to convert.</param>
			<param name="options">An object that specifies serialization options to use.</param>
			<returns>The converted value.</returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.EnumerationJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
			<summary>Writes a specified value as JSON.</summary>
			<param name="writer">The writer to write to.</param>
			<param name="value">The value to convert to JSON.</param>
			<param name="options">An object that specifies serialization options to use.</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.EnumerationExtensions">
			<summary>
				枚举类扩展
			</summary>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.EnumerationExtensions.AddEnumerationConverter``1(System.Text.Json.JsonSerializerOptions)">
			<summary>
				添加转换器
			</summary>
			<typeparam name="T">枚举类型</typeparam>
			<param name="options">Json序列化配置</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher">
			<summary>
				标准哈希类(密码实现)
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.Default">
			<summary>
				默认实现
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.#ctor(System.Int32)">
			<summary>
				密码哈希器
			</summary>
			<param name="iterationCount">迭代计数</param>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.IterationCount">
			<summary>
				迭代计数器
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.Rng">
			<summary>
				随机数生成器
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.Create">
			<summary>
				创建实例
			</summary>
			<returns>ArtemisHasher</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ComputeHash(System.String)">
			<summary>
				生成哈希
			</summary>
			<param name="input">原文</param>
			<returns>哈希值</returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ComputeHashBytes(System.String)">
			<summary>
				计算哈希字节码
			</summary>
			<param name="input"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ComputeHashBytes(System.String,System.Security.Cryptography.RandomNumberGenerator)">
			<summary>
				计算哈希字节码
			</summary>
			<param name="input">原文</param>
			<param name="rng">随机数生成器</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ComputeHashBytes(System.String,System.Security.Cryptography.RandomNumberGenerator,Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf,System.Int32,System.Int32,System.Int32)">
			<summary>
				生成哈希字节码
			</summary>
			<param name="input">输入原文</param>
			<param name="rng">随机数生成器</param>
			<param name="prf">PRF</param>
			<param name="iterationCount">迭代计数器</param>
			<param name="saltSize">盐长度</param>
			<param name="numBytesRequested">请求长度</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.VerifyHash(System.String,System.String)">
			<summary>
				检验哈希码
			</summary>
			<param name="hashedText">哈希后的值</param>
			<param name="providedText">原文</param>
			<returns>bool success, bool needRehash</returns>
			<remarks>时间一致</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.VerifyHash(System.Byte[],System.String,System.Int32@,Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf@)">
			<summary>
				校验密码哈希
			</summary>
			<param name="hashedPassword">密码哈希</param>
			<param name="password">密码</param>
			<param name="iterationCount">迭代计数器</param>
			<param name="prf">PRF</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ThrowIfNull(System.Object,System.String)">
			<summary>
				若参数为空则抛出异常
			</summary>
			<param name="argument"></param>
			<param name="paramName"></param>
			<exception cref="T:System.ArgumentNullException"></exception>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf">
			<summary>
				指定应用于密钥派生算法的 PRF。
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf.HmacSha1">
			<summary>
				HMAC (RFC 2104) SHA1 (FIPS 180-4).
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf.HmacSha256">
			<summary>
				HMAC (RFC 2104) SHA256 (FIPS 180-4).
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf.HmacSha512">
			<summary>
				HMAC (RFC 2104) SHA512 (FIPS 180-4).
			</summary>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.Pbkdf2(System.String,System.Byte[],Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf,System.Int32,System.Int32)">
			<summary>使用 PBKDF2 算法执行密钥派生</summary>
			<param name="input">原文</param>
			<param name="salt">盐</param>
			<param name="prf">伪随机函数(pseudo-random function)</param>
			<param name="iterationCount">哈希过程中prf的迭代次数</param>
			<param name="numBytesRequested">密钥长度(字节长度)</param>
			<returns>派生密钥</returns>
			<remarks>PBKDF2 算法在 RFC 2898 中指定。</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.DeriveKey(System.String,System.Byte[],Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ArtemisKeyDerivationPrf,System.Int32,System.Int32)">
			<summary>
				派生密钥
			</summary>
			<param name="input"></param>
			<param name="salt"></param>
			<param name="prf"></param>
			<param name="iterationCount"></param>
			<param name="numBytesRequested"></param>
			<returns></returns>
			<exception cref="T:System.ArgumentOutOfRangeException"></exception>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.ReadBytesOrder(System.Collections.Generic.IReadOnlyList{System.Byte},System.Int32)">
			<summary>
				读取字节序
			</summary>
			<param name="buffer">接收器</param>
			<param name="offset">偏移量</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Fundamental.Kit.ArtemisHasher.WriteBytesOrder(System.Collections.Generic.IList{System.Byte},System.Int32,System.UInt32)">
			<summary>
				写入字节序
			</summary>
			<param name="buffer">接收器</param>
			<param name="offset">偏移量</param>
			<param name="value">值</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Kit.Base32">
			<summary>
				Base32 encoding/decoding
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.Base32.ThrowIfNull(System.Object,System.String)">
			<summary>
				若参数为空则抛出异常
			</summary>
			<param name="argument"></param>
			<param name="paramName"></param>
			<exception cref="T:System.ArgumentNullException"></exception>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.Base32.GenerateBase32">
			<summary>
				生成base32串
			</summary>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.Base32.ToBase32(System.Byte[])">
			<summary>
				转为Base32
			</summary>
			<param name="input"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.Base32.FromBase32(System.String)">
			<summary>
				解析Base32
			</summary>
			<param name="input"></param>
			<returns></returns>
			<exception cref="T:System.FormatException"></exception>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Kit.BsvId">
			<summary>
				Base Sort Value Id Generator
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Kit.BsvId.SortableBase64CharSet">
			<summary>
				根据ascii码表序列排序的仿base64字符集
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Kit.BsvId.NewId">
			<summary>
				生成新的Id
			</summary>
			<returns></returns>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Model.IMetadata">
			<summary>
				元数据接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IMetadata.Key">
			<summary>
				数据键
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IMetadata.Value">
			<summary>
				数据值
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Model.IDataDict">
			<summary>
				数据字典
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Label">
			<summary>
				数据标签
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Order">
			<summary>
				数据排序
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Type">
			<summary>
				数据类型
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Lock">
			<summary>
				数据是否锁定
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Status">
			<summary>
				数据状态
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.IDataDict.Description">
			<summary>
				数据描述
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Model.MetadataInfo">
			<summary>
				元数据信息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.MetadataInfo.Key">
			<summary>
				元数据键
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.MetadataInfo.Value">
			<summary>
				元数据值
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Model.DataDictInfo">
			<summary>
				数据字典信息
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Key">
			<summary>
				元数据键
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Value">
			<summary>
				元数据值
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Label">
			<summary>
				数据标签
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Order">
			<summary>
				数据排序
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Type">
			<summary>
				数据类型
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Lock">
			<summary>
				数据是否锁定
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Status">
			<summary>
				数据状态
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Fundamental.Model.DataDictInfo.Description">
			<summary>
				数据描述
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Types.ChineseNation">
			<summary>
				中华民族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.未知">
			<summary>
				未知
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.阿昌族">
			<summary>
				阿昌族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.白族">
			<summary>
				白族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.保安族">
			<summary>
				保安族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.布朗族">
			<summary>
				布朗族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.布依族">
			<summary>
				布依族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.朝鲜族">
			<summary>
				朝鲜族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.达斡尔族">
			<summary>
				达斡尔族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.傣族">
			<summary>
				傣族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.德昂族">
			<summary>
				德昂族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.东乡族">
			<summary>
				东乡族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.侗族">
			<summary>
				侗族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.独龙族">
			<summary>
				独龙族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.鄂伦春族">
			<summary>
				鄂伦春族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.俄罗斯族">
			<summary>
				俄罗斯族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.鄂温克族">
			<summary>
				鄂温克族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.高山族">
			<summary>
				高山族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.仡佬族">
			<summary>
				仡佬族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.汉族">
			<summary>
				汉族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.哈尼族">
			<summary>
				哈尼族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.哈萨克族">
			<summary>
				哈萨克族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.赫哲族">
			<summary>
				赫哲族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.回族">
			<summary>
				回族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.基诺族">
			<summary>
				基诺族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.景颇族">
			<summary>
				景颇族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.京族">
			<summary>
				京族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.柯尔克孜族">
			<summary>
				柯尔克孜族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.拉祜族">
			<summary>
				拉祜族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.珞巴族">
			<summary>
				珞巴族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.僳僳族">
			<summary>
				僳僳族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.黎族">
			<summary>
				黎族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.满族">
			<summary>
				满族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.毛南族">
			<summary>
				毛南族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.门巴族">
			<summary>
				门巴族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.蒙古族">
			<summary>
				蒙古族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.苗族">
			<summary>
				苗族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.仫佬族">
			<summary>
				仫佬族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.纳西族">
			<summary>
				纳西族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.怒族">
			<summary>
				怒族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.普米族">
			<summary>
				普米族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.羌族">
			<summary>
				羌族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.撒拉族">
			<summary>
				撒拉族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.畲族">
			<summary>
				畲族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.水族">
			<summary>
				水族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.塔吉克族">
			<summary>
				塔吉克族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.塔塔尔族">
			<summary>
				塔塔尔族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.土家族">
			<summary>
				土家族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.土族">
			<summary>
				土族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.佤族">
			<summary>
				佤族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.维吾尔族">
			<summary>
				维吾尔族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.乌孜别克族">
			<summary>
				乌孜别克族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.锡伯族">
			<summary>
				锡伯族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.瑶族">
			<summary>
				瑶族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.彝族">
			<summary>
				彝族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.裕固族">
			<summary>
				裕固族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.藏族">
			<summary>
				藏族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNation.壮族">
			<summary>
				壮族
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Types.ChineseNation.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Types.ChineseNationEn">
			<summary>
				中华民族
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Unknown">
			<summary>
				未知
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Achangzu">
			<summary>阿昌族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Baizu">
			<summary>白族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Baoanzu">
			<summary>保安族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Bulangzu">
			<summary>布朗族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Buyizu">
			<summary>布依族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Chaoxianzu">
			<summary>朝鲜族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Dawoerzu">
			<summary>达斡尔族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Daizu">
			<summary>傣族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Deangzu">
			<summary>德昂族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Dongxiangzu">
			<summary>东乡族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Dongzu">
			<summary>侗族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Dulongzu">
			<summary>独龙族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Elunchunzu">
			<summary>鄂伦春族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Eluosizu">
			<summary>俄罗斯族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Ewenkezu">
			<summary>鄂温克族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Gaoshanzu">
			<summary>高山族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Gelaozu">
			<summary>仡佬族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Hanzu">
			<summary>汉族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Hanizu">
			<summary>哈尼族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Hasakezu">
			<summary>哈萨克族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Hezhezu">
			<summary>赫哲族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Huizu">
			<summary>回族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Jinuozu">
			<summary>基诺族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Jingpozu">
			<summary>景颇族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Jingzu">
			<summary>京族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Keerkezizu">
			<summary>柯尔克孜族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Lahuzu">
			<summary>拉祜族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Luobazu">
			<summary>珞巴族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Lisuzu">
			<summary>僳僳族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Lizu">
			<summary>黎族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Manzu">
			<summary>满族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Maonanzu">
			<summary>毛南族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Menbazu">
			<summary>门巴族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Mengguzu">
			<summary>蒙古族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Miaozu">
			<summary>苗族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Mulaozu">
			<summary>仫佬族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Naxizu">
			<summary>纳西族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Nuzu">
			<summary>怒族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Pumizu">
			<summary>普米族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Qiangzu">
			<summary>羌族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Salazu">
			<summary>撒拉族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Shezu">
			<summary>畲族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Shuizu">
			<summary>水族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Tajikezu">
			<summary>塔吉克族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Tataerzu">
			<summary>塔塔尔族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Tujiazu">
			<summary>土家族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Tuzu">
			<summary>土族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Wazu">
			<summary>佤族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Weiwuerzu">
			<summary>维吾尔族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Wuzibiekezu">
			<summary>乌孜别克族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Xibozu">
			<summary>锡伯族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Yaozu">
			<summary>瑶族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Yizu">
			<summary>彝族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Yuguzu">
			<summary>裕固族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Zangzu">
			<summary>藏族</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.Zhuangzu">
			<summary>壮族</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Types.ChineseNationEn.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Types.Gender">
			<summary>
				性别类型
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.Gender.Unknown">
			<summary>
				未知
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.Gender.Male">
			<summary>
				男性
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.Gender.Female">
			<summary>
				女性
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Types.Gender.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Types.HashType">
			<summary>
				Hash类型
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Unknown">
			<summary>
				未知类型
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Md5">
			<summary>
				Md5
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Sha1">
			<summary>
				Sha1
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Sha256">
			<summary>
				Sha256
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Sha384">
			<summary>
				Sha384
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.HashType.Sha512">
			<summary>
				Sha512
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Types.HashType.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="T:Artemis.Data.Core.Fundamental.Types.PatchAction">
			<summary>
				修补操作
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.PatchAction.Unknown">
			<summary>
				未知操作
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.PatchAction.Add">
			<summary>
				添加操作
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.PatchAction.Remove">
			<summary>
				删除操作
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.PatchAction.Replace">
			<summary>
				替换操作
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Fundamental.Types.PatchAction.Update">
			<summary>
				更新操作
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Fundamental.Types.PatchAction.#ctor(System.Int32,System.String)">
			<summary>
				构造函数
			</summary>
			<param name="id">枚举Id</param>
			<param name="name">枚举名称</param>
		</member>
		<member name="T:Artemis.Data.Core.Generator">
			<summary>
				实例辅助类
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Generator.CreateInstance``1">
			<summary>
				创建实例
			</summary>
			<typeparam name="TEntity">实例类型</typeparam>
			<returns>实例</returns>
			<exception cref="T:Artemis.Data.Core.Exceptions.CreateInstanceException">创建实例异常</exception>
		</member>
		<member name="T:Artemis.Data.Core.Hash">
			<summary>
				散列服务提供程序
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Hash.DefaultKey">
			<summary>
				默认键
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Hash.KeyBytes(System.String)">
			<summary>
				密钥字节码
			</summary>
			<param name="key">密钥</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Compute(System.Func{System.Byte[],System.Byte[]},System.String)">
			<summary>
				委托，计算字符串散列
			</summary>
			<param name="func">哈希函数</param>
			<param name="input">输入字符串</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.ArtemisHash(System.String)">
			<summary>
				Artemis哈希
			</summary>
			<param name="input">输入原文</param>
			<returns></returns>
			<remarks>用于计算密码</remarks>
		</member>
		<member name="M:Artemis.Data.Core.Hash.ArtemisHashVerify(System.String,System.String)">
			<summary>
				哈希校验
			</summary>
			<param name="hashedText">密文</param>
			<param name="providedText">原文</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Md5Hash(System.String)">
			<summary>
				Md5哈希
			</summary>
			<param name="input">输入字符串</param>
			<returns>输出字符串</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Md5Hash(System.Byte[])">
			<summary>
				Md5哈希
			</summary>
			<param name="input">输入字节码</param>
			<returns>输出字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha1Hash(System.String)">
			<summary>
				Sha1哈希
			</summary>
			<param name="input">输入字符串</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha1Hash(System.Byte[])">
			<summary>
				Sha1哈希
			</summary>
			<param name="input">输入字节码</param>
			<returns>输出字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha256Hash(System.String)">
			<summary>
				Sha256哈希
			</summary>
			<param name="input">输入字符串</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha256Hash(System.Byte[])">
			<summary>
				Sha256哈希
			</summary>
			<param name="input">输入字节码</param>
			<returns>输出字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha384Hash(System.String)">
			<summary>
				Sha384哈希
			</summary>
			<param name="input">输入字符串</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha384Hash(System.Byte[])">
			<summary>
				Sha384哈希
			</summary>
			<param name="input">输入字节码</param>
			<returns>输出字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha512Hash(System.String)">
			<summary>
				Sha512哈希
			</summary>
			<param name="input">输入字符串</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.Sha512Hash(System.Byte[])">
			<summary>
				Sha512哈希
			</summary>
			<param name="input">输入字节码</param>
			<returns>输出字节码</returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacMd5Hash(System.String,System.String)">
			<summary>
				HMACMd5哈希
			</summary>
			<param name="input">输入字符串</param>
			<param name="key"></param>
			<returns></returns>
			<remarks>以自身作为密钥对自身进行散列</remarks>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacMd5Hash(System.Byte[],System.Byte[])">
			<summary>
				HMACMd5哈希
			</summary>
			<param name="input">输入字符串</param>
			<param name="key"></param>
			<returns></returns>
			<remarks>以自身作为密钥对自身进行散列</remarks>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha1Hash(System.String,System.String)">
			<summary>
				HMACSha1哈希
			</summary>
			<param name="input">输入字符串</param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha1Hash(System.Byte[],System.Byte[])">
			<summary>
				HMACSha1哈希
			</summary>
			<param name="input">输入字符串</param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha256Hash(System.String,System.String)">
			<summary>
				HMACSha256哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha256Hash(System.Byte[],System.Byte[])">
			<summary>
				HMACSha256哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha384Hash(System.String,System.String)">
			<summary>
				HMACSha384哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha384Hash(System.Byte[],System.Byte[])">
			<summary>
				HMACSha384哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha512Hash(System.String,System.String)">
			<summary>
				HMACSha512哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Hash.HmacSha512Hash(System.Byte[],System.Byte[])">
			<summary>
				HMACSha512哈希
			</summary>
			<param name="input"></param>
			<param name="key"></param>
			<returns></returns>
		</member>
		<member name="T:Artemis.Data.Core.IConcurrencyPartitionBase">
			<summary>
				基本分区模型
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IConcurrencyPartitionBase`1">
			<summary>
				基本并发分区模型接口
			</summary>
			<typeparam name="TKey"></typeparam>
		</member>
		<member name="T:Artemis.Data.Core.IPartitionBase">
			<summary>
				基本分区模型
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPartitionBase`1">
			<summary>
				基本分区模型
			</summary>
			<typeparam name="TKey">基本记录标识</typeparam>
		</member>
		<member name="T:Artemis.Data.Core.IConcurrencyModelBase">
			<summary>
				基本并发模型接口
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IConcurrencyModelBase`1">
			<summary>
				基本并发模型接口
			</summary>
			<typeparam name="TKey"></typeparam>
		</member>
		<member name="T:Artemis.Data.Core.IModelBase">
			<summary>
				基本模型接口
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IModelBase`1">
			<summary>
				基本模型接口
			</summary>
			<typeparam name="TKey">基本记录标识</typeparam>
		</member>
		<member name="M:Artemis.Data.Core.IModelBase`1.GenerateKey(System.String,System.String,System.String)">
			<summary>
				生成键
			</summary>
			<param name="prefix">前缀</param>
			<param name="space">空间</param>
			<param name="key"></param>
		</member>
		<member name="T:Artemis.Data.Core.IKeySlot">
			<summary>
				标识组件接口
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IKeySlot`1">
			<summary>
				标识组件接口
			</summary>
			<typeparam name="TKey">基本记录标识</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IKeySlot`1.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IMateSlot">
			<summary>
				元数据组件接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IMateSlot.CreatedAt">
			<summary>
				创建时间
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IMateSlot.UpdatedAt">
			<summary>
				更新时间
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IMateSlot.DeletedAt">
			<summary>
				删除时间
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IConcurrencyStamp">
			<summary>
				并发锁组件接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IConcurrencyStamp.ConcurrencyStamp">
			<summary>
				并发锁
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.ICheckStamp">
			<summary>
				检验戳组件接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.ICheckStamp.CheckStamp">
			<summary>
				校验戳
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPartitionSlot">
			<summary>
				分区组件接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IPartitionSlot.Partition">
			<summary>
				分区标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PartitionBase">
			<summary>
				分区模型
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PartitionBase.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PartitionBase`1">
			<summary>
				分区模型
			</summary>
			<typeparam name="TKey">记录标识</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.PartitionBase`1.Partition">
			<summary>
				分区标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.ModelBase">
			<summary>
				基本模型
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.ModelBase.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.ModelBase`1">
			<summary>
				基本模型
			</summary>
			<typeparam name="TKey">记录标识</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.ModelBase`1.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.ModelBase`1.GenerateKey">
			<summary>
				生成键
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PartitionSlot">
			<summary>
				分区组件
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PartitionSlot.Partition">
			<summary>
				分区标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.KeySlot">
			<summary>
				标识组件
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.KeySlot.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.KeySlot`1">
			<summary>
				标识组件
			</summary>
			<typeparam name="TKey">记录标识</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.KeySlot`1.Id">
			<summary>
				存储标识
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.MateSlot">
			<summary>
				元数据组件
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.MateSlot.CreatedAt">
			<summary>
				创建时间
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.MateSlot.UpdatedAt">
			<summary>
				更新时间
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.MateSlot.DeletedAt">
			<summary>
				删除时间
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPageBase">
			<summary>
				分页协议接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IPageBase.Page">
			<summary>
				当前页码(从0开始)
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IPageBase.Size">
			<summary>
				页面大小
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPageRequest`1">
			<summary>
				分页请求协议接口
			</summary>
			<typeparam name="T">过滤条件</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IPageRequest`1.Filter">
			<summary>
				过滤条件
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPageResult">
			<summary>
				分页响应协议接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IPageResult.Count">
			<summary>
				过滤后数据条数
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.IPageResult.Total">
			<summary>
				数据总量
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPageResult`1">
			<summary>
				分页响应协议接口
			</summary>
			<typeparam name="T">响应数据</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IPageResult`1.Data">
			<summary>
				数据包
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PageBase">
			<summary>
				基本分页处理
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageBase.Page">
			<summary>
				当前页码(从1开始)
			</summary>
			<example>1</example>
		</member>
		<member name="P:Artemis.Data.Core.PageBase.Size">
			<summary>
				页面大小
			</summary>
			<example>20</example>
		</member>
		<member name="T:Artemis.Data.Core.PageRequest`1">
			<summary>
				分页请求
			</summary>
			<typeparam name="T"></typeparam>
		</member>
		<member name="P:Artemis.Data.Core.PageRequest`1.Filter">
			<summary>
				过滤条件
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageRequest`1.Skip">
			<summary>
				跳过数
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageRequest`1.Page">
			<summary>
				当前页码(从1开始)
			</summary>
			<example>1</example>
		</member>
		<member name="P:Artemis.Data.Core.PageRequest`1.Size">
			<summary>
				页面大小
			</summary>
			<example>20</example>
		</member>
		<member name="T:Artemis.Data.Core.PageResult`1">
			<summary>
				分页数据响应
			</summary>
			<typeparam name="T">数据包</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.PageResult`1.Data">
			<summary>
				数据包
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageResult`1.Page">
			<summary>
				当前页码(从0开始)
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageResult`1.Size">
			<summary>
				页面大小
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageResult`1.Count">
			<summary>
				过滤后数据条数
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PageResult`1.Total">
			<summary>
				数据总量
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.IPatchItem`1">
			<summary>
				修补项目接口
			</summary>
			<typeparam name="TPatch"></typeparam>
		</member>
		<member name="P:Artemis.Data.Core.IPatchItem`1.Items">
			<summary>
				修补内容
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PatchPackage`2">
			<summary>
				基础修补协议
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PatchPackage`2.AddPatches">
			<summary>
				批量添加
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PatchPackage`2.UpdatePatches">
			<summary>
				批量删除
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.PatchPackage`2.RemovePatches">
			<summary>
				批量删除
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.PatchItem`1">
			<summary>
				修补项目
			</summary>
			<typeparam name="TPatch">修补数据类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.PatchItem`1.Items">
			<summary>
				修补内容
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.AsciiControl">
			<summary>
				ASCII控制
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Nul">
			<summary>
				空字符
			</summary>
			<remarks>NULL</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Soh">
			<summary>
				标题开始
			</summary>
			<remarks>Start Of Headling</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Stx">
			<summary>
				正文开始
			</summary>
			<remarks>Start Of Text</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Etx">
			<summary>
				正文结束
			</summary>
			<remarks>End Of Text</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Eot">
			<summary>
				传输结束
			</summary>
			<remarks>End Of Transmission</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Enq">
			<summary>
				请求
			</summary>
			<remarks>Enquiry</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Ack">
			<summary>
				回应/响应/收到通知
			</summary>
			<remarks>Acknowledge</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Bel">
			<summary>
				响铃
			</summary>
			<remarks>Bell</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Bs">
			<summary>
				退格
			</summary>
			<remarks>Backspace</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Ht">
			<summary>
				水平制表符
			</summary>
			<remarks>Horizontal Tab</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Lf">
			<summary>
				换行键
			</summary>
			<remarks>Line Feed</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Nl" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Nl">
			<summary>
				换行键
			</summary>
			<remarks>New Line</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Lf" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Vt">
			<summary>
				垂直制表符
			</summary>
			<remarks>Vertical Tab</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Ff">
			<summary>
				换页键
			</summary>
			<remarks>Form Feed</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Np" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Np">
			<summary>
				换页键
			</summary>
			<remarks>New Page</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Ff" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Cr">
			<summary>
				回车键
			</summary>
			<remarks>Carriage Return</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.So">
			<summary>
				不用切换
			</summary>
			<remarks>Shift Out</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Si">
			<summary>
				启用切换
			</summary>
			<remarks>Shift In</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Dle">
			<summary>
				数据链路转义
			</summary>
			<remarks>Data Link Escape</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Dc1">
			<summary>
				设备控制1
			</summary>
			<remarks>Device Control 1</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Xon" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Xon">
			<summary>
				传输开始
			</summary>
			<remarks>Transmission O</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Dc1" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Dc2">
			<summary>
				设备控制2
			</summary>
			<remarks>Device Control 2</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Dc3">
			<summary>
				设备控制3
			</summary>
			<remarks>Device Control 3</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.XOff" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.XOff">
			<summary>
				传输中断
			</summary>
			<remarks>Transmission Off</remarks>
			<see cref="F:Artemis.Data.Core.Socket.AsciiControl.Dc3" />
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Dc4">
			<summary>
				设备控制4
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Nak">
			<summary>
				无响应/非正常响应/拒绝接收
			</summary>
			<remarks>Negative Acknowledge</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Syn">
			<summary>
				同步空闲
			</summary>
			<remarks>Synchronous Idle</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Etb">
			<summary>
				传输块结束/块传输终止
			</summary>
			<remarks>End of Transmission Block</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Can">
			<summary>
				取消
			</summary>
			<remarks>Cancel</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Em">
			<summary>
				已到介质末端/介质存储已满/介质中断
			</summary>
			<remarks>End of Medium</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Sub">
			<summary>
				替补/替换
			</summary>
			<remarks>Substitute</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Esc">
			<summary>
				逃离/取消
			</summary>
			<remarks>Escape</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Fs">
			<summary>
				文件分割符
			</summary>
			<remarks>File Separator</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Gs">
			<summary>
				组分隔符/分组符
			</summary>
			<remarks>Group Separator</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Rs">
			<summary>
				记录分离符
			</summary>
			<remarks>Record Separator</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Us">
			<summary>
				单元分隔符
			</summary>
			<remarks>Unit Separator</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Sp">
			<summary>
				空格
			</summary>
			<remarks>Space</remarks>
		</member>
		<member name="F:Artemis.Data.Core.Socket.AsciiControl.Del">
			<summary>
				删除
			</summary>
			<remarks>Delete</remarks>
		</member>
		<member name="T:Artemis.Data.Core.Socket.ISocketRecord">
			<summary>
				Socket记录接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.Stx">
			<summary>
				报文开始位
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.Head">
			<summary>
				报文头段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.HeadRecord">
			<summary>
				报文头记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.Content">
			<summary>
				报文内容段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.Check">
			<summary>
				报文校验段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.CheckRecord">
			<summary>
				报文校验段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ISocketRecord.Etx">
			<summary>
				报文结束位
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.ICheckRecord">
			<summary>
				校验记录接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICheckRecord.Check">
			<summary>
				校验字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICheckRecord.CheckSum">
			<summary>
				求和校验位
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICheckRecord.CheckXor">
			<summary>
				异或校验位
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.IHeadRecord">
			<summary>
				头记录接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IHeadRecord.ContentLength">
			<summary>
				内容长度字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IHeadRecord.Length">
			<summary>
				长度
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IHeadRecord.CommandRecord">
			<summary>
				指令记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IHeadRecord.StatusRecord">
			<summary>
				状态记录
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.ICommandRecord">
			<summary>
				指令记录接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICommandRecord.Command">
			<summary>
				指令字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICommandRecord.CommandCategory">
			<summary>
				指令目录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.ICommandRecord.CommandItem">
			<summary>
				指令项目
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.IStatusRecord">
			<summary>
				状态记录接口
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IStatusRecord.Status">
			<summary>
				状态字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IStatusRecord.StatusCategory">
			<summary>
				状态目录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.IStatusRecord.StatusItem">
			<summary>
				状态项目
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.SocketProtocol">
			<summary>
				Socket协议
			</summary>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.GeneratorCommand(System.Byte,System.Byte)">
			<summary>
				生成指令
			</summary>
			<param name="commandCategory">指令目录</param>
			<param name="commandItem">指令项目</param>
			<returns>生成的指令</returns>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.GeneratorStatus(System.Byte,System.Byte)">
			<summary>
				生成状态
			</summary>
			<param name="statusCategory">状态目录</param>
			<param name="statusItem">状态项目</param>
			<returns>生成的状态</returns>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.GeneratorCheck(System.Byte,System.Byte)">
			<summary>
				生成校验段
			</summary>
			<param name="checkSum">求和校验位</param>
			<param name="checkXor">异或校验位</param>
			<returns></returns>
			<remarks>|CHECKSUM|CHECKXOR|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.SeparateHead(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				分离头
			</summary>
			<param name="message"></param>
			<returns></returns>
			<exception cref="T:System.ArgumentException">报文长度异常</exception>
			<remarks>|STX|HEAD|OTHER|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.SeparateBody(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				分离Body
			</summary>
			<param name="message"></param>
			<returns></returns>
			<exception cref="T:System.ArgumentException">报文长度异常</exception>
			<remarks>|STX|HEAD|BODY|CHECK|ETX|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.SeparateHeadAndBody(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				分离头和报文内容
			</summary>
			<param name="message"></param>
			<returns></returns>
			<exception cref="T:System.ArgumentException">报文长度异常</exception>
			<remarks>|STX|HEAD|OTHER|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.SeparateCheck(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				分离校验位
			</summary>
			<param name="message"></param>
			<returns></returns>
			<exception cref="T:System.ArgumentException"></exception>
			<remarks>|OTHER|CHECK|ETX|</remarks>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.IsStx(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				判断报文头
			</summary>
			<param name="message">报文</param>
			<returns>判断结果</returns>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.IsEtx(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				判断报文尾
			</summary>
			<param name="message">报文</param>
			<returns>判断结果</returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetCheckSum(System.Collections.Generic.IEnumerable{System.Byte})">
			<summary>
				获取求和校验位
			</summary>
			<param name="content">报文内容</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetCheckXor(System.Collections.Generic.IEnumerable{System.Byte})">
			<summary>
				获取异或校验位
			</summary>
			<param name="headAndContent">报文内容</param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.Verify(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				验证报文
			</summary>
			<param name="message">报文</param>
			<returns></returns>
		</member>
		<member name="M:Artemis.Data.Core.Socket.SocketProtocol.Verify(Artemis.Data.Core.Socket.ISocketRecord)">
			<summary>
			</summary>
			<param name="record"></param>
			<returns></returns>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetSocketRecord(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				获取SocketRecord
			</summary>
			<param name="message">报文</param>
			<returns></returns>
			<exception cref="T:System.ArgumentException"></exception>
			<remarks>|STX|HEAD|BODY|CHECK|ETX|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetHeadRecord(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				获取报文头记录
			</summary>
			<param name="head">报文头字节码</param>
			<returns>报文头记录</returns>
			<exception cref="T:System.ArgumentException">指令长度异常</exception>
			<remarks>|ContentLength|CommandCategory|CommandItem|StatusCategory|StatusItem|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetCommandRecord(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				获取指令记录
			</summary>
			<param name="command"></param>
			<returns></returns>
			<remarks>|CommandCategory|CommandItem|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetStatusRecord(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				获取状态记录
			</summary>
			<param name="status"></param>
			<returns></returns>
			<remarks>|StatusCategory|StatusItem|</remarks>
		</member>
		<member
			name="M:Artemis.Data.Core.Socket.SocketProtocol.GetCheckRecord(System.Collections.Generic.IReadOnlyList{System.Byte})">
			<summary>
				获取校验记录
			</summary>
			<param name="check"></param>
			<returns></returns>
			<remarks>|CheckSum|CheckXor|</remarks>
		</member>
		<member name="T:Artemis.Data.Core.Socket.ProtocolSetting">
			<summary>
				协议配置
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.StxLength">
			<summary>
				起始标识长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.ContentCountLength">
			<summary>
				报文内容长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CommandCategoryLength">
			<summary>
				指令目录长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CommandItemLength">
			<summary>
				指令项目长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.StatusCategoryLength">
			<summary>
				状态目录长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.StatusItemLength">
			<summary>
				状态项目长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CheckSumLength">
			<summary>
				求和校验位长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CheckXorLength">
			<summary>
				异或校验位长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.EtxLength">
			<summary>
				结束标识
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CommandLength">
			<summary>
				指令长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.StatusLength">
			<summary>
				状态长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.HeadLength">
			<summary>
				报文头长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.CheckLength">
			<summary>
				校验位长度
			</summary>
		</member>
		<member name="F:Artemis.Data.Core.Socket.ProtocolSetting.Shortest">
			<summary>
				最短长度
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.SocketRecord">
			<summary>
				Socket记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.Stx">
			<summary>
				报文开始位
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.Head">
			<summary>
				报文头段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.HeadRecord">
			<summary>
				报文头记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.Content">
			<summary>
				报文内容段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.Check">
			<summary>
				报文校验段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.CheckRecord">
			<summary>
				报文校验段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.SocketRecord.Etx">
			<summary>
				报文结束位
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.CheckRecord">
			<summary>
				校验记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CheckRecord.Check">
			<summary>
				校验字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CheckRecord.CheckSum">
			<summary>
				求和校验位
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CheckRecord.CheckXor">
			<summary>
				异或校验位
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.HeadRecord">
			<summary>
				头记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.HeadRecord.ContentLength">
			<summary>
				内容长度字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.HeadRecord.Length">
			<summary>
				长度
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.HeadRecord.CommandRecord">
			<summary>
				指令记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.HeadRecord.StatusRecord">
			<summary>
				状态记录
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.CommandRecord">
			<summary>
				指令记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CommandRecord.Command">
			<summary>
				指令字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CommandRecord.CommandCategory">
			<summary>
				指令目录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.CommandRecord.CommandItem">
			<summary>
				指令项目
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Socket.StatusRecord">
			<summary>
				状态记录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.StatusRecord.Status">
			<summary>
				状态字节段
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.StatusRecord.StatusCategory">
			<summary>
				状态目录
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Socket.StatusRecord.StatusItem">
			<summary>
				状态项目
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.INode">
			<summary>
				节点结构接口
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.INode`1">
			<summary>
				节点结构接口
			</summary>
			<typeparam name="TKey">键类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.INode`1.ParentId">
			<summary>
				父节点键
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.ITree`1">
			<summary>
				基本树结构接口
			</summary>
			<typeparam name="TEntity">实体类型</typeparam>
		</member>
		<member name="T:Artemis.Data.Core.ITree`2">
			<summary>
				基本树结构接口
			</summary>
			<typeparam name="TKey">键类型</typeparam>
			<typeparam name="TEntity">实体类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.ITree`2.Node">
			<summary>
				当前节点
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.ITree`2.Children">
			<summary>
				子节点集合
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Node">
			<summary>
				树结构数据
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Node.Id">
			<summary>
				节点键
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Node.ParentId">
			<summary>
				父节点键
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Node`1">
			<summary>
				树结构数据
			</summary>
			<typeparam name="TKey">标识类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.Node`1.Id">
			<summary>
				节点键
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Node`1.ParentId">
			<summary>
				父节点键
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Tree`1">
			<summary>
				基本树结构
			</summary>
			<typeparam name="TEntity"></typeparam>
		</member>
		<member name="P:Artemis.Data.Core.Tree`1.Node">
			<summary>
				当前节点
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Tree`1.Children">
			<summary>
				子节点集合
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.Tree`2">
			<summary>
				基本树结构
			</summary>
			<typeparam name="TKey">键</typeparam>
			<typeparam name="TEntity">实体类型</typeparam>
		</member>
		<member name="P:Artemis.Data.Core.Tree`2.Node">
			<summary>
				当前节点
			</summary>
		</member>
		<member name="P:Artemis.Data.Core.Tree`2.Children">
			<summary>
				子节点集合
			</summary>
		</member>
		<member name="T:Artemis.Data.Core.TreeExtensions">
			<summary>
				树扩展
			</summary>
		</member>
	</members>
</doc>