using Microsoft.EntityFrameworkCore.ChangeTracking;
using Microsoft.EntityFrameworkCore.ValueGeneration;

namespace Artemis.Data.Store.Configuration;

/// <summary>
/// DateTime生成器
/// </summary>
public class DateTimeGenerator : ValueGenerator<DateTime>
{
    #region Overrides of ValueGenerator

    /// <summary>
    ///     Template method to be overridden by implementations to perform value generation.
    /// </summary>
    /// <remarks>
    ///     See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
    /// </remarks>
    /// <param name="entry">The change tracking entry of the entity for which the value is being generated.</param>
    /// <returns>The generated value.</returns>
    public override DateTime Next(EntityEntry entry) => DateTime.Now;

    /// <summary>
    ///     Gets a value indicating whether the values generated are temporary (i.e they should be replaced
    ///     by database generated values when the entity is saved) or are permanent (i.e. the generated values
    ///     should be saved to the database).
    /// </summary>
    /// <remarks>
    ///     <para>
    ///         An example of temporary value generation is generating negative numbers for an integer primary key
    ///         that are then replaced by positive numbers generated by the database when the entity is saved. An
    ///         example of permanent value generation are client-generated values for a <see cref="T:System.Guid" /> primary
    ///         key which are saved to the database.
    ///     </para>
    ///     <para>
    ///         See <see href="https://aka.ms/efcore-docs-value-generation">EF Core value generation</see> for more information and examples.
    ///     </para>
    /// </remarks>
    public override bool GeneratesTemporaryValues { get; } = false;

    #endregion
}